<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2008-2013, Hazelcast, Inc. All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:hz="http://www.hazelcast.com/schema/spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.hazelcast.com/schema/spring hazelcast-spring-2.5.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:systemPropertiesModeName="SYSTEM_PROPERTIES_MODE_OVERRIDE" >
        <property name="locations">
            <list>
                <value>classpath:/hazelcast-default.properties</value>
            </list>
        </property>
    </bean>

    <hz:hazelcast id="instance">
        <hz:config>
            <hz:instance-name>test-instance</hz:instance-name>
            <hz:group
                    name="${cluster.group.name}"
                    password="${cluster.group.password}"/>
            <hz:license-key>HAZELCAST_ENTERPRISE_LICENSE_KEY</hz:license-key>
            <hz:management-center enabled="true" url="myserver:80" update-interval="4" />
            <hz:properties>
                <hz:property name="hazelcast.merge.first.run.delay.seconds">5</hz:property>
                <hz:property name="hazelcast.merge.next.run.delay.seconds">5</hz:property>
            </hz:properties>
            <hz:wan-replication name="testWan">
                <hz:target-cluster group-name="tokyo" group-password="tokyo-pass">
                    <hz:replication-impl>com.hazelcast.impl.wan.WanNoDelayReplication</hz:replication-impl>
                    <hz:end-points>
                        <hz:address>10.2.1.1:5701</hz:address>
                        <hz:address>10.2.1.2:5701</hz:address>
                    </hz:end-points>
                </hz:target-cluster>
                <hz:target-cluster group-name="london" group-password="london-pass">
                    <hz:replication-impl-object ref="dummyWanReplication"/>
                    <hz:end-points>
                        <hz:address>10.3.5.1:5701</hz:address>
                        <hz:address>10.3.5.2:5701</hz:address>
                    </hz:end-points>
                </hz:target-cluster>
            </hz:wan-replication>
            <hz:network port="${cluster.port}" port-auto-increment="false">
                <hz:outbound-ports>
                    <hz:ports>35000-35100</hz:ports>
                    <hz:ports>36000,36100</hz:ports>
                </hz:outbound-ports>
                <hz:join>
                    <hz:multicast enabled="${boolean.false}" multicast-group="224.2.2.3" multicast-port="54327"
                                  multicast-time-to-live="16" multicast-timeout-seconds="8"/>
                    <hz:tcp-ip enabled="${boolean.true}">
                        <hz:required-member>127.0.0.1:5700</hz:required-member>
                        <!--                         <hz:members>${cluster.members}</hz:members> -->
                        <hz:interface>127.0.0.1:5700</hz:interface>
                        <hz:interface>127.0.0.1:5701</hz:interface>
                    </hz:tcp-ip>
                    <hz:aws enabled="false" access-key="sample-access-key" secret-key="sample-secret-key"
                            region="sample-region" security-group-name="sample-group"
                            tag-key="sample-tag-key" tag-value="sample-tag-value"/>
                </hz:join>
                <hz:interfaces enabled="false">
                    <hz:interface>10.10.1.*</hz:interface>
                </hz:interfaces>
                <hz:ssl enabled="false" factory-class-name="com.hazelcast.spring.DummySSLContextFactory"
                        factory-implementation="dummySSLContextFactory" />
                <hz:socket-interceptor enabled="false" class-name="com.hazelcast.spring.DummySocketInterceptor"
                        implementation="dummySocketInterceptor" />
                <hz:symmetric-encryption enabled="true"
                                         algorithm="PBEWithMD5AndDES"
                                         salt="thesalt"
                                         password="thepass"
                                         iteration-count="19"/>
                <hz:asymmetric-encryption enabled="false"
                                          key-password="thekeypass"
                                          key-alias="local"
                                          store-type="JKS"
                                          store-password="thestorepass"
                                          store-path="keystore"/>
            </hz:network>
            <hz:partition-group enabled="true" group-type="CUSTOM">
                <hz:member-group>
                    <hz:interface>127.0.0.1</hz:interface>
                    <hz:interface>127.0.0.2</hz:interface>
                </hz:member-group>
                <hz:member-group>
                    <hz:interface>127.0.0.3</hz:interface>
                    <hz:interface>127.0.0.4</hz:interface>
                </hz:member-group>
            </hz:partition-group>
            <hz:executor-service name="testExec"
                                 core-pool-size="2"
                                 max-pool-size="32"
                                 keep-alive-seconds="30"/>
            <hz:executor-service name="testExec2"
                                 core-pool-size="5"
                                 max-pool-size="10"
                                 keep-alive-seconds="20"/>
            <hz:queue name="testQ"
                      max-size-per-jvm="1000"
                      backing-map-ref="testQMap">

                <hz:item-listeners>
                    <hz:item-listener class-name="com.hazelcast.spring.DummyItemListener" include-value="true"/>
                </hz:item-listeners>
            </hz:queue>
            <hz:queue name="q"
                      max-size-per-jvm="2500"
                      backing-map-ref="qMap"/>
            <hz:map name="testMap"
                    backup-count="2"
                    max-size="0"
                    eviction-percentage="30"
                    read-backup-data="true"
                    cache-value="true"
                    eviction-policy="NONE"
                    merge-policy="hz.ADD_NEW_ENTRY"
                    storage-type="HEAP">
                <hz:map-store enabled="true" class-name="com.hazelcast.spring.DummyStore" write-delay-seconds="0"/>
                <hz:near-cache time-to-live-seconds="0" max-idle-seconds="60" eviction-policy="LRU" max-size="5000"
                               invalidate-on-change="true"/>

                <hz:indexes>
                    <hz:index attribute="name"/>
                    <hz:index attribute="age" ordered="true"/>
                </hz:indexes>
            </hz:map>
            <hz:map name="testMap2"
                    backup-count="2"
                    max-size="1000"
                    max-size-policy="cluster_wide_map_size"
                    eviction-percentage="30"
                    read-backup-data="true"
                    cache-value="true"
                    eviction-policy="NONE"
                    merge-policy="hz.ADD_NEW_ENTRY">
                <hz:map-store enabled="true" implementation="dummyMapStore" write-delay-seconds="0"/>
                <hz:wan-replication-ref name="testWan" merge-policy="hz.ADD_NEW_ENTRY"/>

                <hz:entry-listeners>
                    <hz:entry-listener class-name="com.hazelcast.spring.DummyEntryListener" include-value="true"/>
                    <hz:entry-listener implementation="dummyEntryListener" local="true"/>
                </hz:entry-listeners>
            </hz:map>

            <hz:map name="testMap3"
                    backup-count="2"
                    max-size="0"
                    max-size-policy="map_size_per_jvm"
                    eviction-percentage="30"
                    read-backup-data="true"
                    cache-value="true"
                    eviction-policy="NONE"
                    merge-policy="hz.ADD_NEW_ENTRY">
                <hz:map-store enabled="true" factory-class-name="com.hazelcast.spring.DummyStoreFactory"
                              write-delay-seconds="0">
                    <hz:properties>
                        <hz:property name="dummy.property">value</hz:property>
                        <hz:property name="dummy.property.2">value2</hz:property>
                    </hz:properties>
                </hz:map-store>
            </hz:map>
            <hz:map name="testMap4"
                    backup-count="2"
                    max-size="0"
                    eviction-percentage="30"
                    read-backup-data="true"
                    cache-value="true"
                    eviction-policy="NONE"
                    merge-policy="hz.ADD_NEW_ENTRY">
                <hz:map-store enabled="true" factory-implementation="dummyMapStoreFactory" write-delay-seconds="0"/>
            </hz:map>
            <hz:map name="simpleMap"
                    backup-count="3"
                    async-backup-count="1"
                    time-to-live-seconds="1"
                    max-size="10"
                    eviction-percentage="50"
                    eviction-policy="LRU"
                    merge-policy="hz.LATEST_UPDATE"/>

            <hz:multimap name="testMultimap"
                         value-collection-type="LIST">

                <hz:entry-listeners>
                    <hz:entry-listener class-name="com.hazelcast.spring.DummyEntryListener" include-value="true"/>
                    <hz:entry-listener implementation="dummyEntryListener" local="true"/>
                </hz:entry-listeners>
            </hz:multimap>

            <hz:topic name="testTopic">
                <hz:message-listeners>
                    <hz:message-listener class-name="com.hazelcast.spring.DummyMessageListener"/>
                </hz:message-listeners>
            </hz:topic>

            <hz:merge-policies>
                <hz:map-merge-policy name="hz.MERGE_POLICY_TEST"
                                     class-name="com.hazelcast.spring.TestMapMergePolicy"
                                     implementation="dummyMergePolicy"/>
            </hz:merge-policies>

            <hz:listeners>
                <hz:listener class-name="com.hazelcast.spring.DummyMembershipListener"/>
                <hz:listener implementation="dummyMembershipListener"/>
            </hz:listeners>

        </hz:config>
    </hz:hazelcast>

    <hz:map id="map1" instance-ref="instance" name="map1"/>
    <hz:map id="map2" instance-ref="instance" name="map2"/>
    <hz:multiMap id="multiMap" instance-ref="instance" name="testMultimap"/>
    <hz:queue id="queue" instance-ref="instance" name="testQ"/>
    <hz:topic id="topic" instance-ref="instance" name="testTopic"/>
    <hz:set id="set" instance-ref="instance" name="set"/>
    <hz:list id="list" instance-ref="instance" name="list"/>
    <hz:executorService id="executorService" instance-ref="instance" name="executorService"/>
    <hz:idGenerator id="idGenerator" instance-ref="instance" name="idGenerator"/>
    <hz:atomicNumber id="atomicNumber" instance-ref="instance" name="atomicNumber"/>
    <hz:countDownLatch id="countDownLatch" instance-ref="instance" name="countDownLatch"/>
    <hz:semaphore id="semaphore" instance-ref="instance" name="semaphore"/>
    <hz:lock id="lock" instance-ref="instance" name="lock"/>

    <bean id="dummyMapStore" class="com.hazelcast.spring.DummyStore"/>
    <bean id="dummyMapStoreFactory" class="com.hazelcast.spring.DummyStoreFactory"/>
    <bean id="dummyWanReplication" class="com.hazelcast.spring.DummyWanReplication"/>
    <bean id="dummyMergePolicy" class="com.hazelcast.spring.DummyMergePolicy"/>
    <bean id="dummyMembershipListener" class="com.hazelcast.spring.DummyMembershipListener"/>
    <bean id="dummyEntryListener" class="com.hazelcast.spring.DummyEntryListener"/>
    <bean id="dummySSLContextFactory" class="com.hazelcast.spring.DummySSLContextFactory"/>
    <bean id="dummySocketInterceptor" class="com.hazelcast.spring.DummySocketInterceptor"/>

    <hz:config id="liteConfig">
        <hz:lite-member>true</hz:lite-member>
    </hz:config>
</beans>
