/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_hazelcast_internal_tpc_iouring_Socket */

#ifndef _Included_com_hazelcast_internal_tpc_iouring_Socket
#define _Included_com_hazelcast_internal_tpc_iouring_Socket
#ifdef __cplusplus
extern "C" {
#endif
#undef com_hazelcast_internal_tpc_iouring_Socket_AF_INET
#define com_hazelcast_internal_tpc_iouring_Socket_AF_INET 2L
#undef com_hazelcast_internal_tpc_iouring_Socket_AF_INET6
#define com_hazelcast_internal_tpc_iouring_Socket_AF_INET6 10L
#undef com_hazelcast_internal_tpc_iouring_Socket_SOCK_STREAM
#define com_hazelcast_internal_tpc_iouring_Socket_SOCK_STREAM 1L
/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    initNative
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_initNative
  (JNIEnv *, jclass);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    listen
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_listen
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    socket
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_socket
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    toInetSocketAddress
 * Signature: (JJ)Ljava/net/InetSocketAddress;
 */
JNIEXPORT jobject JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_toInetSocketAddress
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    bind
 * Signature: (I[BI)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_bind
  (JNIEnv *, jclass, jint, jbyteArray, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    connect
 * Signature: (I[BII)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_connect
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    setBlocking
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_setBlocking
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    getLocalAddress
 * Signature: (I)Ljava/net/InetSocketAddress;
 */
JNIEXPORT jobject JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_getLocalAddress
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    getRemoteAddress
 * Signature: (I)Ljava/net/InetSocketAddress;
 */
JNIEXPORT jobject JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_getRemoteAddress
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    setTcpNoDelay
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_setTcpNoDelay
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    isTcpNoDelay
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_isTcpNoDelay
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    setTcpKeepAliveTime
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_setTcpKeepAliveTime
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    getTcpKeepAliveTime
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_getTcpKeepAliveTime
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    setTcpKeepaliveIntvl
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_setTcpKeepaliveIntvl
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    getTcpKeepaliveIntvl
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_getTcpKeepaliveIntvl
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    setTcpKeepAliveProbes
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_setTcpKeepAliveProbes
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    getTcpKeepaliveProbes
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_getTcpKeepaliveProbes
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    setSendBufferSize
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_setSendBufferSize
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    getSendBufferSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_getSendBufferSize
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    setReceiveBufferSize
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_setReceiveBufferSize
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    getReceiveBufferSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_getReceiveBufferSize
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    setReuseAddress
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_setReuseAddress
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    isReuseAddress
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_isReuseAddress
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    setReusePort
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_setReusePort
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    isReusePort
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_isReusePort
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    setKeepAlive
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_setKeepAlive
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    isKeepAlive
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_isKeepAlive
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    setSoLinger
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_setSoLinger
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_Socket
 * Method:    getSoLinger
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_Socket_getSoLinger
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
