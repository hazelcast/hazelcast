/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_hazelcast_internal_tpc_iouring_NativeSocket */

#ifndef _Included_com_hazelcast_internal_tpc_iouring_NativeSocket
#define _Included_com_hazelcast_internal_tpc_iouring_NativeSocket
#ifdef __cplusplus
extern "C" {
#endif
#undef com_hazelcast_internal_tpc_iouring_NativeSocket_AF_INET
#define com_hazelcast_internal_tpc_iouring_NativeSocket_AF_INET 2L
#undef com_hazelcast_internal_tpc_iouring_NativeSocket_AF_INET6
#define com_hazelcast_internal_tpc_iouring_NativeSocket_AF_INET6 10L
#undef com_hazelcast_internal_tpc_iouring_NativeSocket_SOCK_STREAM
#define com_hazelcast_internal_tpc_iouring_NativeSocket_SOCK_STREAM 1L
/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    initNative
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_initNative
  (JNIEnv *, jclass);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    listen
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_listen
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    socket
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_socket
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    toInetSocketAddress
 * Signature: (JJ)Ljava/net/InetSocketAddress;
 */
JNIEXPORT jobject JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_toInetSocketAddress
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    bind
 * Signature: (I[BI)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_bind
  (JNIEnv *, jclass, jint, jbyteArray, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    connect
 * Signature: (I[BII)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_connect
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    setBlocking
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_setBlocking
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    isBlocking
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_isBlocking
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    getLocalAddress
 * Signature: (I)Ljava/net/InetSocketAddress;
 */
JNIEXPORT jobject JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_getLocalAddress
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    getRemoteAddress
 * Signature: (I)Ljava/net/InetSocketAddress;
 */
JNIEXPORT jobject JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_getRemoteAddress
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    setTcpNoDelay
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_setTcpNoDelay
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    isTcpNoDelay
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_isTcpNoDelay
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    setTcpKeepAliveTime
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_setTcpKeepAliveTime
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    getTcpKeepAliveTime
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_getTcpKeepAliveTime
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    setTcpKeepaliveIntvl
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_setTcpKeepaliveIntvl
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    getTcpKeepaliveIntvl
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_getTcpKeepaliveIntvl
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    setTcpKeepAliveProbes
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_setTcpKeepAliveProbes
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    getTcpKeepaliveProbes
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_getTcpKeepaliveProbes
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    setSendBufferSize
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_setSendBufferSize
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    getSendBufferSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_getSendBufferSize
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    setReceiveBufferSize
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_setReceiveBufferSize
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    getReceiveBufferSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_getReceiveBufferSize
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    setReuseAddress
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_setReuseAddress
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    isReuseAddress
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_isReuseAddress
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    setReusePort
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_setReusePort
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    isReusePort
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_isReusePort
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    setKeepAlive
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_setKeepAlive
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    isKeepAlive
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_isKeepAlive
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    setSoLinger
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_setSoLinger
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_hazelcast_internal_tpc_iouring_NativeSocket
 * Method:    getSoLinger
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_hazelcast_internal_tpc_iouring_NativeSocket_getSoLinger
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
