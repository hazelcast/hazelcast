<?xml version="1.0"?>

<!DOCTYPE suppressions PUBLIC
        "-//Puppy Crawl//DTD Suppressions 1.1//EN"
        "http://www.puppycrawl.com/dtds/suppressions_1_1.dtd">

<suppressions>

    <!-- Suppress duplicate checking of copyright notice -->
    <suppress checks="StrictDuplicateCode" files=".java" lines="1-15"/>

    <!--To enable checking on a module, comment out its suppression. e.g. mapreduce is enabled.-->
    <suppress checks="" files="[\\/]ascii[\\/]"/>
    <suppress checks="" files="[\\/]config[\\/]"/>
    <suppress checks="" files="[\\/]core[\\/]"/>
    <suppress checks="" files="[\\/]jmx[\\/]"/>
    <suppress checks="" files="[\\/]management[\\/]"/>
    <suppress checks="" files="[\\/]map[\\/]"/>
    <suppress checks="" files="com.hazelcast.query[\\/]"/>
    <suppress checks="" files="[\\/]queue[\\/]"/>
    <suppress checks="" files="[\\/]spi.impl[\\/]"/>
    <suppress checks="" files="[\\/]util[\\/]"/>
    <suppress checks="" files="[\\/]wan[\\/]"/>

    <suppress checks="" files="com.hazelcast.client[\\/]"/>
    <suppress checks="" files="com.hazelcast.hibernate[\\/]"/>
    <suppress checks="" files="com.hazelcast.jca[\\/]"/>
    <suppress checks="" files="com.hazelcast.spring[\\/]"/>
    <suppress checks="" files="com.hazelcast.web[\\/]"/>
    <suppress checks="" files="com.hazelcast.aws[\\/]"/>
    <suppress checks="" files="com.hazelcast.transaction[\\/]"/>


    <!--<suppress checks="" files="[\\/]examples[\\/]"/>-->
    <suppress checks="MagicNumberCheck" files="[\\/]examples[\\/]"/>
    <suppress checks="FileLengthCheck" files="TestApp.java"/>
    <suppress checks="MethodCountCheck" files="TestApp.java"/>
    <suppress checks="ClassFanOutComplexityCheck" files="TestApp.java"/>
    <suppress checks="CyclomaticComplexityCheck" files="TestApp.java"/>
    <suppress checks="NPathComplexityCheck" files="TestApp.java"/>
    <suppress checks="MethodLengthCheck" files="TestApp.java"/>
    <suppress checks="MethodLengthCheck" files="AllTest.java"/>
    <suppress checks="MethodCountCheck" files="AllTest.java"/>
    <suppress checks="AnonInnerLengthCheck" files="SimpleFunctionalMapTest.java"/>
    <suppress checks="MethodLengthCheck" files="SimpleFunctionalMapTest.java"/>
    <suppress checks="CyclomaticComplexityCheck" files="SimpleFunctionalMapTest.java"/>
    <suppress checks="MethodLengthCheck" files="StartServer.java"/>
    <suppress checks="CyclomaticComplexityCheck" files="StartServer.java"/>
    <suppress checks="NPathComplexityCheck" files="StartServer.java"/>

    <!--Code Smells -->

    <!--Exclude Clover instrumented sources-->
    <suppress checks="" files="[\\/]src-instrumented[\\/]"/>

    <!-- Exclude implementation packages from JavaDoc on public methods checkstyle enforcement -->
    <suppress checks="JavadocMethod" files="[\\/]impl[\\/]"/>


    <!-- Cluster -->
    <suppress checks="JavadocMethod" files="com.hazelcast.cluster[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.cluster[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.cluster[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.cluster[\\/]"/>
    <suppress checks="ReturnCount" files="com.hazelcast.cluster.ClusterDataSerializerHook"/>
    <suppress checks="" files="com.hazelcast.cluster.AbstractJoiner"/>
    <suppress checks="" files="com.hazelcast.cluster.ClusterServiceImpl"/>
    <suppress checks="" files="com.hazelcast.cluster.MulticastJoiner"/>
    <suppress checks="" files="com.hazelcast.cluster.MulticastService"/>
    <suppress checks="" files="com.hazelcast.cluster.TcpIpJoiner"/>
    <suppress checks="" files="com.hazelcast.cluster.ConfigCheck"/>
    <suppress checks="" files="com.hazelcast.cluster.FinalizeJoinOperation"/>
    <suppress checks="" files="com.hazelcast.cluster.JoinCheckOperation"/>


    <!-- Exclude implementation packages from some checkstyle enforcement -->
    <suppress checks="JavadocMethod" files="com.hazelcast.concurrent[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.concurrent[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.concurrent[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.concurrent[\\/]"/>

    <!-- current.atomiclong-->
    <suppress checks="MethodCount" files="com.hazelcast.concurrent.atomiclong.AtomicLongProxy"/>
    <suppress checks="ReturnCount" files="com.hazelcast.concurrent.atomiclong.client.AtomicLongPortableHook"/>
    <suppress checks="ReturnCount" files="com.hazelcast.concurrent.atomiclong.AtomicLongDataSerializerHook"/>
    <suppress checks="CyclomaticComplexity" files="com.hazelcast.concurrent.atomiclong.AtomicLongDataSerializerHook"/>
    <suppress checks="AnonInnerLength" files="com.hazelcast.concurrent.atomiclong.AtomicLongDataSerializerHook"/>

    <!-- concurrent.atomicreference -->
    <suppress checks="ReturnCount" files="com.hazelcast.concurrent.atomicreference.client.AtomicReferencePortableHook"/>
    <suppress checks="ReturnCount" files="com.hazelcast.concurrent.atomicreference.AtomicReferenceDataSerializerHook"/>
    <suppress checks="CyclomaticComplexity"
              files="com.hazelcast.concurrent.atomicreference.AtomicReferenceDataSerializerHook"/>
    <suppress checks="AnonInnerLength"
              files="com.hazelcast.concurrent.atomicreference.AtomicReferenceDataSerializerHook"/>

    <!-- concurrent.countdownlatch -->
    <suppress checks="ReturnCount" files="com.hazelcast.concurrent.countdownlatch.client.CountDownLatchPortableHook"/>
    <suppress checks="ReturnCount" files="com.hazelcast.concurrent.countdownlatch.CountDownLatchDataSerializerHook"/>

    <!-- concurrent.semaphore -->
    <suppress checks="ReturnCount" files="com.hazelcast.concurrent.semaphore.client.SemaphorePortableHook"/>
    <suppress checks="ReturnCount" files="com.hazelcast.concurrent.semaphore.SemaphoreDataSerializerHook"/>
    <suppress checks="CyclomaticComplexity" files="com.hazelcast.concurrent.semaphore.SemaphoreDataSerializerHook"/>
    <suppress checks="AnonInnerLengthCheck" files="com.hazelcast.concurrent.semaphore.SemaphoreDataSerializerHook"/>

    <!-- concurrent.lock -->
    <suppress checks="ReturnCount" files="com.hazelcast.concurrent.lock.client.LockPortableHook.java"/>
    <suppress checks="MethodCount" files="com.hazelcast.concurrent.lock.LockServiceImpl"/>
    <suppress checks="MethodCount" files="com.hazelcast.concurrent.lock.LockResourceImpl"/>
    <suppress checks="MethodCount" files="com.hazelcast.concurrent.lock.LockStoreImpl"/>
    <suppress checks="Todo" files="com.hazelcast.concurrent.lock.ConditionImpl"/>
    <suppress checks="ReturnCount" files="com.hazelcast.concurrent.lock.LockDataSerializerHook"/>
    <suppress checks="CyclomaticComplexity" files="com.hazelcast.concurrent.lock.LockDataSerializerHook"/>
    <suppress checks="AnonInnerLengthCheck" files="com.hazelcast.concurrent.lock.LockDataSerializerHook"/>

    <!-- Storage -->
    <suppress checks="JavadocMethod" files="com.hazelcast.storage[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.storage[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.storage[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.storage[\\/]"/>


    <!-- client -->
    <suppress checks="JavadocMethod" files="com.hazelcast.client[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.client[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.client[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.client[\\/]"/>
    <suppress checks="ReturnCount" files="com.hazelcast.client.txn.ClientTxnPortableHook"/>
    <suppress checks="ReturnCount" files="com.hazelcast.client.ClientPortableFactory"/>
    <suppress checks="ReturnCount" files="com.hazelcast.client.ClientEndpoint"/>
    <suppress checks="CyclomaticComplexity" files="com.hazelcast.client.ClientPortableFactory"/>
    <suppress checks="MethodCount" files="com.hazelcast.client.ClientEngineImpl"/>
    <suppress checks="ClassFanOutComplexity" files="com.hazelcast.client.ClientEngineImpl"/>

    <!-- Monitor -->
    <suppress checks="JavadocMethod" files="com.hazelcast.monitor[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.monitor[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.monitor[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.monitor[\\/]"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.monitor.impl.MemberStateImpl"/>
    <suppress checks="CyclomaticComplexity" files="com.hazelcast.monitor.impl.MemberStateImpl"/>
    <suppress checks="MethodCount" files="com.hazelcast.monitor.impl.LocalMapStatsImpl"/>
    <suppress checks="CyclomaticComplexity" files="com.hazelcast.monitor.TimedMemberState"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.monitor.TimedMemberState"/>

    <!-- Queue -->
    <suppress checks="JavadocMethod" files="com.hazelcast.queue[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.queue[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.queue[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.queue[\\/]"/>
    <suppress checks="MethodLength" files="com.hazelcast.queue.QueuePortableHook"/>
    <suppress checks="ClassFanOutComplexity" files="com.hazelcast.queue.QueuePortableHook"/>
    <suppress checks="ClassDataAbstractionCouplingC" files="com.hazelcast.queue.QueuePortableHook"/>
    <suppress checks="MethodLength" files="com.hazelcast.queue.QueueDataSerializerHook"/>
    <suppress checks="ClassFanOutComplexity" files="com.hazelcast.queue.QueueDataSerializerHook"/>
    <suppress checks="ClassDataAbstractionCouplingC" files="com.hazelcast.queue.QueueDataSerializerHook"/>

    <!-- Query -->
    <suppress checks="JavadocMethod" files="com.hazelcast.query[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.query[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.query[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.query[\\/]"/>
    <suppress checks="MagicNumber" files="com.hazelcast.query.Parser"/>

    <!-- Instance -->
    <suppress checks="JavadocMethod" files="com.hazelcast.instance[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.instance[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.instance[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.instance[\\/]"/>
    <suppress checks="MethodCount" files="com.hazelcast.instance.HazelcastInstanceProxy"/>
    <suppress checks="MethodCount" files="com.hazelcast.instance.MemberImpl"/>
    <suppress checks="EmptyBlock" files="com.hazelcast.instance.OutOfMemoryErrorDispatcher"/>
    <suppress checks="EmptyBlock" files="com.hazelcast.instance.NodeShutdownLatch"/>
    <suppress checks="MethodCount" files="com.hazelcast.instance.HazelcastInstanceImpl"/>
    <suppress checks="ClassFanOutComplexity" files="com.hazelcast.instance.HazelcastInstanceImpl"/>
    <suppress checks="VisibilityModifier" files="com.hazelcast.instance.HazelcastInstanceImpl"/>
    <suppress checks="VisibilityModifier" files="com.hazelcast.instance.GroupProperties"/>
    <suppress checks="MemberName" files="com.hazelcast.instance.GroupProperties"/>
    <suppress checks="ConstantName" files="com.hazelcast.instance.GroupProperties"/>
    <suppress checks="VariableName" files="com.hazelcast.instance.GroupProperties"/>
    <suppress checks="MethodLength" files="com.hazelcast.instance.GroupProperties"/>
    <suppress checks="ExecutableStatementCount" files="com.hazelcast.instance.GroupProperties"/>
    <!-- todo-->
    <suppress checks="" files="com.hazelcast.instance.DefaultAddressPicker"/>
    <suppress checks="" files="com.hazelcast.instance.HazelcastInstanceFactory"/>
    <suppress checks="" files="com.hazelcast.instance.Node"/>

    <!-- SPI -->
    <suppress checks="JavadocMethod" files="com.hazelcast.spi[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.spi[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.spi[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.spi[\\/]"/>
    <suppress checks="MethodCount" files="com.hazelcast.spi.Operation"/>
    <suppress checks="IllegalType" files="com.hazelcast.spi.DistributedObjectAccessor"/>
    <suppress checks="" files="com.hazelcast.spi.Operation"/>

    <!-- Transaction -->
    <suppress checks="JavadocMethod" files="com.hazelcast.transaction[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.transaction[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.transaction[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.transaction[\\/]"/>

    <!-- OSGI -->
    <suppress checks="JavadocMethod" files="com.hazelcast.osgi[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.osgi[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.osgi[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.osgi[\\/]"/>

    <!-- Security -->
    <suppress checks="JavadocMethod" files="com.hazelcast.security[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.security[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.security[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.security[\\/]"/>
    <suppress checks="BooleanExpressionComplexityCheck" files="com.hazelcast.security.permission[\\/]"/>
    <suppress checks="ReturnCount" files="com.hazelcast.security.permission.ActionConstants"/>
    <suppress checks="CyclomaticComplexity" files="com.hazelcast.security.permission.ActionConstants"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.security.permission.InstancePermission"/>

    <!-- Logging -->
    <suppress checks="JavadocMethod" files="com.hazelcast.logging[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.logging[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.logging[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.logging[\\/]"/>
    <suppress checks="ReturnCount" files="com.hazelcast.logging.Slf4jFactory"/>

    <!-- Partition -->
    <suppress checks="JavadocMethod" files="com.hazelcast.partition[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.partition[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.partition[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.partition[\\/]"/>
    <!-- todo -->
    <!-- suppress checks="" files="com.hazelcast.partition.impl.InternalPartitionServiceImpl"/ -->
    <suppress checks="" files="com.hazelcast.partition.impl[\\/]"/>
    <suppress checks="" files="com.hazelcast.partition.impl.MigrationRequestOperation"/>
    <suppress checks="MagicNumber" files="com.hazelcast.partition[\\/]"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.partition.MigrationInfo"/>

    <!-- Topic -->
    <suppress checks="JavadocMethod" files="com.hazelcast.topic[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.topic[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.topic[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.topic[\\/]"/>
    <suppress checks="VisibilityModifier" files="com.hazelcast.topic.TopicEvent"/>
    <suppress checks="Todo" files="com.hazelcast.topic.TopicEvent"/>

    <!-- Executor -->
    <suppress checks="JavadocMethod" files="com.hazelcast.executor[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.executor[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.executor[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.executor[\\/]"/>
    <suppress checks="MethodCount" files="com.hazelcast.executor.ExecutorServiceProxy"/>
    <suppress checks="ClassFanOutComplexity" files="com.hazelcast.executor.ExecutorServiceProxy"/>
    <!-- the invokeAll is so scary that Peter doesn't dare to touch it. Need get someone involved who write it-->
    <suppress checks="" files="com.hazelcast.executor.ExecutorServiceProxy"/>

    <!-- Collections -->
    <suppress checks="JavadocMethod" files="com.hazelcast.collection[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.collection[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.collection[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.collection[\\/]"/>
    <suppress checks="MethodCount" files="com.hazelcast.collection.CollectionContainer"/>
    <suppress checks="ClassDataAbstractionCouplingC" files="com.hazelcast.collection.CollectionPortableHook"/>
    <suppress checks="MethodLength" files="com.hazelcast.collection.CollectionPortableHook"/>
    <suppress checks="MethodCount" files="com.hazelcast.collection.CollectionDataSerializerHook"/>
    <suppress checks="MethodLength" files="com.hazelcast.collection.CollectionDataSerializerHook"/>
    <suppress checks="ClassFanOutComplexity" files="com.hazelcast.collection.CollectionDataSerializerHook"/>
    <suppress checks="ClassDataAbstractionCouplingC" files="com.hazelcast.collection.CollectionDataSerializerHook"/>
    <suppress checks="DeclarationOrder" files="com.hazelcast.collection.CollectionDataSerializerHook"/>


    <!-- List -->
    <suppress checks="JavadocMethod" files="com.hazelcast.collection.list[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.collection.list[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.collection.list[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.collection.list[\\/]"/>

    <!-- Multimap -->
    <suppress checks="JavadocMethod" files="com.hazelcast.multimap[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.multimap[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.multimap[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.multimap[\\/]"/>
    <suppress checks="MethodLength" files="com.hazelcast.multimap.MultiMapDataSerializerHook"/>
    <suppress checks="MethodCount" files="com.hazelcast.multimap.MultiMapDataSerializerHook"/>
    <suppress checks="ClassDataAbstractionCouplingC" files="com.hazelcast.multimap.MultiMapDataSerializerHook"/>
    <suppress checks="MethodLength" files="com.hazelcast.multimap.MultiMapPortableHook"/>
    <suppress checks="ClassDataAbstractionCouplingC" files="com.hazelcast.multimap.MultiMapPortableHook"/>
    <suppress checks="CyclomaticComplexity" files="com.hazelcast.multimap.MultiMapService"/>
    <suppress checks="ReturnCount" files="com.hazelcast.multimap.operations.MultiMapOperationFactory"/>

    <!-- NIO -->
    <suppress checks="JavadocMethod" files="com.hazelcast.nio[\\/]"/>
    <suppress checks="JavadocType" files="com.hazelcast.nio[\\/]"/>
    <suppress checks="JavadocMethod" files="com.hazelcast.nio[\\/]"/>
    <suppress checks="JavadocVariable" files="com.hazelcast.nio[\\/]"/>
    <suppress checks="EmptyBlock" files="com.hazelcast.nio.AbstractIOSelector"/>
    <suppress checks="CyclomaticComplexity" files="com.hazelcast.nio.AbstractIOSelector"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.AbstractIOSelector"/>
    <suppress checks="IllegalType" files="com.hazelcast.nio.serialization.serializers.ArrayListSerializerHook"/>
    <suppress checks="MethodCount" files="com.hazelcast.nio.serialization.ByteArrayObjectDataInput"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.serialization.ByteArrayObjectDataInput"/>
    <suppress checks="BooleanExpressionComplexity" files="com.hazelcast.nio.serialization.ByteArrayObjectDataInput"/>
    <suppress checks="ParameterAssignment" files="com.hazelcast.nio.serialization.ByteArrayObjectDataInput"/>
    <suppress checks="MethodCount" files="com.hazelcast.nio.serialization.ByteArrayObjectDataOutput"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.serialization.ByteArrayObjectDataOutput"/>
    <suppress checks="MethodCount" files="com.hazelcast.nio.serialization.ByteBufferObjectDataInput"/>
    <suppress checks="ParameterAssignment" files="com.hazelcast.nio.serialization.ByteBufferObjectDataInput"/>
    <suppress checks="MethodCount" files="com.hazelcast.nio.serialization.ByteBufferObjectDataOutput"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.CipherHelper"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.CipherHelper"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.ClassLoaderUtil"/>
    <suppress checks="ParameterAssignment" files="com.hazelcast.nio.ClassLoaderUtil"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.ClassLoaderUtil"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.serialization.Data"/>
    <suppress checks="InnerAssignment" files="com.hazelcast.nio.serialization.Data"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.serialization.DataAdapter"/>
    <suppress checks="CyclomaticComplexity" files="com.hazelcast.nio.serialization.DataAdapter"/>
    <suppress checks="ReturnCount" files="com.hazelcast.nio.serialization.DataAdapter"/>
    <suppress checks="MethodLength" files="com.hazelcast.nio.serialization.DataAdapter"/>
    <suppress checks="Todo" files="com.hazelcast.nio.serialization.DataSerializableFactory"/>
    <suppress checks="Todo" files="com.hazelcast.nio.serialization.DataSerializer"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.serialization.DefaultPortableReader"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.serialization.DefaultPortableReader"/>
    <suppress checks="LocalFinalVariableName" files="com.hazelcast.nio.serialization.DefaultPortableReader"/>
    <suppress checks="LocalFinalVariableName" files="com.hazelcast.nio.serialization.DefaultPortableWriter"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.serialization.DefaultPortableWriter"/>
    <suppress checks="MethodCount" files="com.hazelcast.nio.DynamicByteBuffer"/>
    <suppress checks="EmptyBlock" files="com.hazelcast.nio.serialization.FactoryIdHelper"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.DynamicByteBuffer"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.serialization.FieldDefinitionImpl"/>
    <suppress checks="MethodCount" files="com.hazelcast.nio.IOService"/>
    <suppress checks="EmptyBlock" files="com.hazelcast.nio.IOUtil"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.IOUtil"/>
    <suppress checks="ReturnCount" files="com.hazelcast.nio.IOUtil"/>
    <suppress checks="ParameterAssignment" files="com.hazelcast.nio.IOUtil"/>
    <suppress checks="IllegalType" files="com.hazelcast.nio.serialization.serializers.LinkedListSerializerHook"/>
    <suppress checks="ReturnCount" files="com.hazelcast.nio.serialization.MorphingPortableReader"/>
    <suppress checks="MethodCount" files="com.hazelcast.nio.NodeIOService"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.NodeIOService"/>
    <suppress checks="MethodCount" files="com.hazelcast.nio.serialization.ObjectDataInputStream"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.Packet"/>
    <suppress checks="Todo" files="com.hazelcast.nio.serialization.PortableFactory"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.serialization.PortableSerializer"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.ReadHandler"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.ssl.SSLSocketChannelWrapper"/>
    <suppress checks="CyclomaticComplexity" files="com.hazelcast.nio.ssl.SSLSocketChannelWrapper"/>
    <suppress checks="EmptyBlock" files="com.hazelcast.nio.ssl.SSLSocketChannelWrapper"/>
    <suppress checks="MethodLength" files="com.hazelcast.nio.ssl.SSLSocketChannelWrapper"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.ssl.SSLSocketChannelWrapper"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.serialization.SerializationContextImpl"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.serialization.SerializationServiceBuilder"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.serialization.SerializationServiceBuilder"/>
    <suppress checks="InnerAssignment" files="com.hazelcast.nio.serialization.SerializationServiceImpl"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.serialization.SerializationServiceImpl"/>
    <suppress checks="ParameterAssignment" files="com.hazelcast.nio.serialization.SerializationServiceImpl"/>
    <suppress checks="ClassFanOutComplexity" files="com.hazelcast.nio.serialization.SerializationServiceImpl"/>
    <suppress checks="ClassDataAbstractionCoupling" files="com.hazelcast.nio.serialization.SerializationServiceImpl"/>
    <suppress checks="ExecutableStatementCount" files="com.hazelcast.nio.serialization.SerializationServiceImpl"/>
    <suppress checks="ParameterNumber" files="com.hazelcast.nio.serialization.SerializationServiceImpl"/>
    <suppress checks="MethodCount" files="com.hazelcast.nio.serialization.SerializationServiceImpl"/>
    <suppress checks="EmptyBlock" files="com.hazelcast.nio.SocketAcceptor"/>
    <suppress checks="EmptyBlock" files="com.hazelcast.nio.SocketConnector"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.SocketConnector"/>
    <suppress checks="CyclomaticComplexity" files="com.hazelcast.nio.SocketConnector"/>
    <suppress checks="Todo" files="com.hazelcast.nio.SocketConnector"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.SocketPacketReader"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.SocketPacketWriter"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.TcpIpConnectionManager"/>
    <suppress checks="ClassDataAbstractionCoupling" files="com.hazelcast.nio.TcpIpConnectionManager"/>
    <suppress checks="ExecutableStatement" files="com.hazelcast.nio.TcpIpConnectionManager"/>
    <suppress checks="CyclomaticComplexity" files="com.hazelcast.nio.TcpIpConnectionManager"/>
    <suppress checks="MethodCount" files="com.hazelcast.nio.TcpIpConnectionManager"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.TcpIpConnectionManager"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.UTFEncoderDecoder"/>
    <suppress checks="EmptyBlock" files="com.hazelcast.nio.UTFEncoderDecoder"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.UTFEncoderDecoder"/>
    <suppress checks="CyclomaticComplexity" files="com.hazelcast.nio.UTFEncoderDecoder"/>
    <suppress checks="BooleanExpressionComplexity" files="com.hazelcast.nio.UTFEncoderDecoder"/>
    <suppress checks="MethodLength" files="com.hazelcast.nio.UTFEncoderDecoder"/>
    <suppress checks="ExecutableStatement" files="com.hazelcast.nio.UnsafeHelper"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.UnsafeHelper"/>
    <suppress checks="IllegalImport" files="com.hazelcast.nio.UnsafeHelper"/>
    <suppress checks="EmptyBlock" files="com.hazelcast.nio.serialization.UnsafeInputOutputFactory"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.serialization.UnsafeObjectDataInput"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.serialization.UnsafeObjectDataOutput"/>
    <suppress checks="MagicNumber" files="com.hazelcast.nio.WriteHandler"/>
    <suppress checks="EmptyBlock" files="com.hazelcast.nio.WriteHandler"/>
    <suppress checks="NPathComplexity" files="com.hazelcast.nio.WriteHandler"/>
    <suppress checks="CyclomaticComplexity" files="com.hazelcast.nio.WriteHandler"/>
    <suppress checks="InnerAssignment" files="com.hazelcast.nio.WriteHandler"/>
    <suppress checks="EmptyStatement" files="com.hazelcast.nio.WriteHandler"/>


</suppressions>

