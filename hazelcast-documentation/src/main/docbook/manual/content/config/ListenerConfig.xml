<?xml version='1.0' encoding='UTF-8'?>
<!--
  ~ Copyright (c) 2008-2012, Hazel Bilisim Ltd. All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<sect1 xml:id="ListenerConfig" version="5.0" xmlns="http://docbook.org/ns/docbook"
       xmlns:xi="http://www.w3.org/2001/XInclude"
       xmlns:xlink="http://www.w3.org/1999/xlink"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd
       http://www.w3.org/1999/xlink http://www.w3.org/1999/xlink.xsd">
    <title>Listener Configurations</title>
    <para>
        Hazelcast provides various event listener extensions to receive specific event types. These are:
        <itemizedlist>
            <listitem>
                <para>
                    <emphasis role="bold">MembershipListener</emphasis> for cluster membership events
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">InstanceListener</emphasis> for distributed instance creation and destroy events
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">MigrationListener</emphasis> for partition migration start and complete events
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">LifecycleListener</emphasis> for HazelcastInstance lifecycle events
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">EntryListener</emphasis> for IMap and MultiMap entry events
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">ItemListener</emphasis> for IQueue, ISet and IList item events
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">MessageListener</emphasis> for ITopic message events
                </para>
            </listitem>
        </itemizedlist>
        These listeners can be added to and removed from related object using Hazelcast API. Such as
        <programlisting language="java">MembershipListener listener = new MyMembershipListener();
hazelcastInstance.getCluster().addMembershipListener(listener);
hazelcastInstance.getCluster().removeMembershipListener(listener);</programlisting>
        <programlisting language="java">EntryListener listener = new MyEntryListener();
IMap map = hazelcastInstance.getMap("default");
map.addEntryListener(listener, true);
map.removeEntryListener(listener);</programlisting>
        <programlisting language="java">ItemListener listener = new MyItemListener();
IQueue queue = hazelcastInstance.getQueue("default");
queue.addItemListener(listener, true);
queue.removeItemListener(listener);</programlisting>
    </para>

    <para>
        Downside of attaching listeners using API is possibility of missing events between creation of object and registering listener. To overcome this race condition Hazelcast introduces registration of listeners in configuration. Listeners can be registered using either Hazelcast XML configuration, Config API or Spring configuration.
    </para>

    <para>
        <itemizedlist>
            <listitem>
                <para>
                    <emphasis role="bold">MembershipListener</emphasis>
                </para>
                <para>
                    <emphasis role="italic">Hazelcast XML configuration</emphasis>
                    <programlisting language="xml"><![CDATA[
<listeners>
        <listener>com.hazelcast.examples.MembershipListener</listener>
</listeners>]]></programlisting>
                </para>
                <para><emphasis role="italic">Config API</emphasis>
                    <programlisting language="java">
config.addListenerConfig(new ListenerConfig("com.hazelcast.examples.MembershipListener"));</programlisting>
                </para>
                <para>
                    <emphasis role="italic">Spring XML configuration</emphasis>
                    <programlisting language="xml"><![CDATA[
<hz:listeners>
    <hz:listener class-name="com.hazelcast.spring.DummyMembershipListener"/>
    <hz:listener implementation="dummyMembershipListener"/>
</hz:listeners>]]></programlisting>
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">InstanceListener</emphasis>
                </para>
                <para>
                    <emphasis role="italic">Hazelcast XML configuration</emphasis>
                    <programlisting language="xml"><![CDATA[
<listeners>
        <listener>com.hazelcast.examples.InstanceListener</listener>
</listeners>]]></programlisting>
                </para>
                <para><emphasis role="italic">Config API</emphasis>
                    <programlisting language="java">
config.addListenerConfig(new ListenerConfig("com.hazelcast.examples.InstanceListener"));</programlisting>
                </para>
                <para>
                <emphasis role="italic">Spring XML configuration</emphasis>
                <programlisting language="xml"><![CDATA[
<hz:listeners>
    <hz:listener class-name="com.hazelcast.spring.DummyInstanceListener"/>
    <hz:listener implementation="dummyInstanceListener"/>
</hz:listeners>]]></programlisting>
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">MigrationListener</emphasis>
                </para>
                <para>
                    <emphasis role="italic">Hazelcast XML configuration</emphasis>
                    <programlisting language="xml"><![CDATA[
<listeners>
        <listener>com.hazelcast.examples.MigrationListener</listener>
</listeners>]]></programlisting>
                </para>
                <para><emphasis role="italic">Config API</emphasis>
                    <programlisting language="java">
config.addListenerConfig(new ListenerConfig("com.hazelcast.examples.MigrationListener"));</programlisting>
                </para>
                <para>
                    <emphasis role="italic">Spring XML configuration</emphasis>
                    <programlisting language="xml"><![CDATA[
<hz:listeners>
    <hz:listener class-name="com.hazelcast.spring.DummyMigrationListener"/>
    <hz:listener implementation="dummyMigrationListener"/>
</hz:listeners>]]></programlisting>
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">LifecycleListener</emphasis>
                </para>
                <para>
                    <emphasis role="italic">Hazelcast XML configuration</emphasis>
                    <programlisting language="xml"><![CDATA[
<listeners>
        <listener>com.hazelcast.examples.LifecycleListener</listener>
</listeners>]]></programlisting>
                </para>
                <para><emphasis role="italic">Config API</emphasis>
                    <programlisting language="java">
                        config.addListenerConfig(new ListenerConfig("com.hazelcast.examples.LifecycleListener"));</programlisting>
                </para>
                <para>
                    <emphasis role="italic">Spring XML configuration</emphasis>
                    <programlisting language="xml"><![CDATA[
<hz:listeners>
    <hz:listener class-name="com.hazelcast.spring.DummyLifecycleListener"/>
    <hz:listener implementation="dummyLifecycleListener"/>
</hz:listeners>]]></programlisting>
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">EntryListener</emphasis> for IMap
                </para>
                <para>
                    <emphasis role="italic">Hazelcast XML configuration</emphasis>
                    <programlisting language="xml"><![CDATA[
<map name="default">
    ...
    <entry-listeners>
        <entry-listener include-value="true" local="false">com.hazelcast.examples.EntryListener</entry-listener>
    </entry-listeners>
</map>]]></programlisting>
                </para>
                <para><emphasis role="italic">Config API</emphasis>
                    <programlisting language="java">
mapConfig.addEntryListenerConfig(new EntryListenerConfig("com.hazelcast.examples.EntryListener", false, false));</programlisting>
                </para>
                <para>
                <emphasis role="italic">Spring XML configuration</emphasis>
                <programlisting language="xml"><![CDATA[
<hz:map name="default">
    <hz:entry-listeners>
        <hz:entry-listener class-name="com.hazelcast.spring.DummyEntryListener" include-value="true"/>
        <hz:entry-listener implementation="dummyEntryListener" local="true"/>
    </hz:entry-listeners>
</hz:map>]]></programlisting>
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">EntryListener</emphasis> for MultiMap
                </para>
                <para>
                    <emphasis role="italic">Hazelcast XML configuration</emphasis>
                    <programlisting language="xml"><![CDATA[
<multimap name="default">
    <value-collection-type>SET</value-collection-type>
    <entry-listeners>
        <entry-listener include-value="true" local="false">com.hazelcast.examples.EntryListener</entry-listener>
    </entry-listeners>
</multimap>]]></programlisting>
                </para>
                <para><emphasis role="italic">Config API</emphasis>
                    <programlisting language="java">
multiMapConfig.addEntryListenerConfig(new EntryListenerConfig("com.hazelcast.examples.EntryListener", false, false));</programlisting>
                </para>
                <para>
                    <emphasis role="italic">Spring XML configuration</emphasis>
                    <programlisting language="xml"><![CDATA[
<hz:multimap name="default" value-collection-type="LIST">
    <hz:entry-listeners>
        <hz:entry-listener class-name="com.hazelcast.spring.DummyEntryListener" include-value="true"/>
        <hz:entry-listener implementation="dummyEntryListener" local="true"/>
    </hz:entry-listeners>
</hz:multimap>]]></programlisting>
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">ItemListener</emphasis> for IQueue
                </para>
                <para>
                    <emphasis role="italic">Hazelcast XML configuration</emphasis>
                    <programlisting language="xml"><![CDATA[
<queue name="default">
    ...
    <item-listeners>
        <item-listener include-value="true">com.hazelcast.examples.ItemListener</item-listener>
    </item-listeners>
</queue>]]></programlisting>
                </para>
                <para><emphasis role="italic">Config API</emphasis>
                    <programlisting language="java">
queueConfig.addItemListenerConfig(new ItemListenerConfig("com.hazelcast.examples.ItemListener", true));</programlisting>
                </para>
                <para>
                    <emphasis role="italic">Spring XML configuration</emphasis>
                    <programlisting language="xml"><![CDATA[
<hz:queue name="default" max-size-per-jvm="1000" backing-map-ref="default">
    <hz:item-listeners>
        <hz:item-listener class-name="com.hazelcast.spring.DummyItemListener" include-value="true"/>
    </hz:item-listeners>
</hz:queue>]]></programlisting>
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">MessageListener</emphasis> for ITopic
                </para>
                <para>
                    <emphasis role="italic">Hazelcast XML configuration</emphasis>
                    <programlisting language="xml"><![CDATA[
<topic name="default">
    <message-listeners>
        <message-listener>com.hazelcast.examples.MessageListener</message-listener>
    </message-listeners>
</topic>]]></programlisting>
                </para>
                <para><emphasis role="italic">Config API</emphasis>
                    <programlisting language="java">
topicConfig.addMessageListenerConfig(new ListenerConfig("com.hazelcast.examples.MessageListener"));</programlisting>
                </para>
                <para>
                    <emphasis role="italic">Spring XML configuration</emphasis>
                    <programlisting language="xml"><![CDATA[
<hz:topic name="default">
    <hz:message-listeners>
        <hz:message-listener class-name="com.hazelcast.spring.DummyMessageListener"/>
    </hz:message-listeners>
</hz:topic>]]></programlisting>
                </para>
            </listitem>
        </itemizedlist>
    </para>
</sect1>
