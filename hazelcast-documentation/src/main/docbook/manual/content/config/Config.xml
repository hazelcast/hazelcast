<?xml version='1.0' encoding='UTF-8'?>
<!--
  ~ Copyright (c) 2008-2012, Hazel Bilisim Ltd. All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<para xmlns='http://docbook.org/ns/docbook' >
    Hazelcast can be configured through xml or using configuration api or even mix of both.
    <orderedlist>
        <listitem>
            <para>
                <emphasis role="bold">Xml Configuration</emphasis>
            </para>
            <para>If you are using default Hazelcast instance
                (<literal>Hazelcast.getDefaultInstance()</literal>) or creating new Hazelcast
                instance with passing
                <literal>null</literal>
                parameter
                (<literal>Hazelcast.newHazelcastInstance(null)</literal>), Hazelcast will look
                into two places for the configuration file:
                <itemizedlist>
                    <listitem>
                        <para>
                            <emphasis role="bold">System property:</emphasis>
                            Hazelcast will first
                            check if "<literal>hazelcast.config</literal>" system property is set to
                            a file path. Example:
                            <literal>-Dhazelcast.config=C:/myhazelcast.xml</literal>.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis role="bold">Classpath:</emphasis>
                            If config file is not set
                            as a system property, Hazelcast will check classpath for
                            <emphasis
                                    role="bold">
                                <literal>hazelcast.xml</literal>
                            </emphasis>
                            file.
                        </para>
                    </listitem>
                </itemizedlist>
                If Hazelcast doesn't find any config file, it will happily start with
                default configuration (<literal>hazelcast-default.xml</literal>) located in
                <literal>hazelcast.jar</literal>. (Before configuring Hazelcast, please try to
                work with default configuration to see if it works for you. Default should be just
                fine for most of the users. If not, then consider custom configuration for your
                environment.)
            </para>
            <para>
                If you want to specify your own configuration file to create
                <literal>Config</literal>, Hazelcast supports several ways including filesystem,
                classpath, InputStream, URL etc.:
                <itemizedlist>
                    <listitem>
                        <para>
                            <code language="java">Config cfg = new
                                XmlConfigBuilder(xmlFileName).build();
                            </code>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code language="java">Config cfg = new
                                XmlConfigBuilder(inputStream).build();
                            </code>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code language="java">Config cfg = new
                                ClasspathXmlConfig(xmlFileName);
                            </code>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code language="java">Config cfg = new
                                FileSystemXmlConfig(configFilename);
                            </code>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code language="java">Config cfg = new
                                UrlXmlConfig(url);
                            </code>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code language="java">Config cfg = new
                                InMemoryXmlConfig(xml);
                            </code>
                        </para>
                    </listitem>
                </itemizedlist>
            </para>
        </listitem>
        <listitem>
            <para>
                <emphasis role="bold">Programmatic Configuration</emphasis>
            </para>
            <para>To configure Hazelcast programatically, just instantiate a
                <literal>Config</literal> object and set/change its properties/attributes due to
                your needs.
                <programlisting language="java"><![CDATA[Config cfg = new Config();
cfg.setPort(5900);
cfg.setPortAutoIncrement(false);
        
NetworkConfig network = cfg.getNetworkConfig();
Join join = network.getJoin();
join.getMulticastConfig().setEnabled(false);
join.getTcpIpConfig().addMember("10.45.67.32").addMember("10.45.67.100")
            .setRequiredMember("192.168.10.100").setEnabled(true);
network.getInterfaces().setEnabled(true).addInterface("10.45.67.*");
        
MapConfig mapCfg = new MapConfig();
mapCfg.setName("testMap");
mapCfg.setBackupCount(2);
mapCfg.getMaxSizeConfig().setSize(10000);
mapCfg.setTimeToLiveSeconds(300);
        
MapStoreConfig mapStoreCfg = new MapStoreConfig();
mapStoreCfg.setClassName("com.hazelcast.examples.DummyStore").setEnabled(true);
mapCfg.setMapStoreConfig(mapStoreCfg);

NearCacheConfig nearCacheConfig = new NearCacheConfig();
nearCacheConfig.setMaxSize(1000).setMaxIdleSeconds(120).setTimeToLiveSeconds(300);
mapCfg.setNearCacheConfig(nearCacheConfig);

cfg.addMapConfig(mapCfg);]]></programlisting>
            </para>
        </listitem>
    </orderedlist>
    After creating
    <literal>Config</literal>
    object, you can use it to initialize
    default Hazelcast instance or create a new Hazelcast instance.
    <itemizedlist>
        <listitem>
            <para>
                <code language="java">Hazelcast.init(cfg);</code>
            </para>
        </listitem>
        <listitem>
            <para>
                <code language="java">Hazelcast.newHazelcastInstance(cfg);</code>
            </para>
        </listitem>
    </itemizedlist>
    <anchor xml:id="NamedHazelcastInstance"/>
    <itemizedlist>
        <title>HazelcastInstance with a name:</title>
        <listitem>
            <para>To create a named
                <literal>HazelcastInstance</literal>
                you should set
                <code>instanceName</code>
                of
                <literal>Config</literal>
                object.
            </para>
            <para>
                <programlisting language="java"><![CDATA[Config cfg = new Config();
config.setInstanceName('my-instance');
Hazelcast.newHazelcastInstance(config);]]></programlisting>
            </para>
        </listitem>
        <listitem>
            <para>To retrieve an existing
                <literal>HazelcastInstance</literal>
                using its name, use;
            </para>
            <para>
                <code language="java">Hazelcast.getHazelcastInstanceByName('my-instance');</code>
            </para>
        </listitem>
        <listitem>
            <para>To retrieve all existing<literal>HazelcastInstance</literal>s, use;
            </para>
            <para>
                <code language="java">Hazelcast.getAllHazelcastInstances();</code>
            </para>
        </listitem>
    </itemizedlist>

</para>