<?xml version='1.0' encoding='UTF-8'?>
<!--
  ~ Copyright (c) 2008-2013, Hazelcast, Inc. All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<sect2 xml:id="MapEviction" version='5.0' xmlns='http://docbook.org/ns/docbook'
       xmlns:xi="http://www.w3.org/2001/XInclude"
       xmlns:xlink="http://www.w3.org/1999/xlink"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd
        http://www.w3.org/1999/xlink http://www.w3.org/1999/xlink.xsd">
    <title>Eviction</title>
    <para>Hazelcast also supports policy based eviction for distributed map. Currently supported
        eviction policies are LRU (Least Recently Used) and LFU (Least Frequently Used). This
        feature enables Hazelcast to be used as a distributed cache. If
        <literal>time-to-live-seconds</literal>
        is not 0 then entries older than
        <literal>time-to-live-seconds</literal>
        value will get evicted, regardless of the
        eviction policy set. Here is a sample configuration for eviction:
        <programlisting language="xml"><![CDATA[<hazelcast>
    ...
    <map name="default">
        <!--
            Number of backups. If 1 is set as the backup-count for example,
            then all entries of the map will be copied to another JVM for
            fail-safety. Valid numbers are 0 (no backup), 1, 2, 3.
        -->
        <backup-count>1</backup-count>

        <!--
            Maximum number of seconds for each entry to stay in the map. Entries that are
            older than <time-to-live-seconds> and not updated for <time-to-live-seconds>
            will get automatically evicted from the map.
            Any integer between 0 and Integer.MAX_VALUE. 0 means infinite. Default is 0.
        -->
        <time-to-live-seconds>0</time-to-live-seconds>

        <!--
            Maximum number of seconds for each entry to stay idle in the map. Entries that are
            idle(not touched) for more than <max-idle-seconds> will get
            automatically evicted from the map.
            Entry is touched if get, put or containsKey is called.
            Any integer between 0 and Integer.MAX_VALUE.
            0 means infinite. Default is 0.
        -->
        <max-idle-seconds>0</max-idle-seconds>

        <!--
            Valid values are:
            NONE (no extra eviction, <time-to-live-seconds> may still apply),
            LRU  (Least Recently Used),
            LFU  (Least Frequently Used).
            NONE is the default.
            Regardless of the eviction policy used, <time-to-live-seconds> will still apply. 
        -->
        <eviction-policy>LRU</eviction-policy>

        <!--
            Maximum size of the map. When max size is reached,
            map is evicted based on the policy defined.
            Any integer between 0 and Integer.MAX_VALUE. 0 means
            Integer.MAX_VALUE. Default is 0.
        -->
        <max-size policy="cluster_wide_map_size">5000</max-size>

        <!--
            When max. size is reached, specified percentage of
            the map will be evicted. Any integer between 0 and 100.
            If 25 is set for example, 25% of the entries will
            get evicted.
        -->
        <eviction-percentage>25</eviction-percentage>
       <!--
            Specifies when eviction will be started. Default value is 3. 
           So every 3 (+up to 5 for performance reasons) seconds 
           eviction will be kicked of. Eviction is costly operation, setting 
           this number too low, can decrease the performance. 
       -->
      <eviction-delay-seconds>3</eviction-delay-seconds>
    </map>
</hazelcast>
]]></programlisting>
    </para>
    <para>
        <emphasis role="bold">Max-Size Policies</emphasis>
    </para>
    <para>
        There are 5 defined policies can be used in max-size configuration.
        <orderedlist>
            <listitem>
                <para>
                    <emphasis role="bold">cluster_wide_map_size:</emphasis> Cluster-wide total max map size (default policy).
                    <programlisting language="xml"><![CDATA[<max-size policy="cluster_wide_map_size">50000</max-size>]]></programlisting>
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">map_size_per_jvm:</emphasis>  Max map size per JVM.
                    <programlisting language="xml"><![CDATA[<max-size policy="map_size_per_jvm">5000</max-size>]]></programlisting>
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">partitions_wide_map_size:</emphasis> Partitions (default 271) wide max map size.
                    <programlisting language="xml"><![CDATA[<max-size policy="partitions_wide_map_size">27100</max-size>]]></programlisting>
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">used_heap_size:</emphasis> Max used heap size in MB (mega-bytes) per JVM.
                    <programlisting language="xml"><![CDATA[<max-size policy="used_heap_size">4096</max-size>]]></programlisting>
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">used_heap_percentage:</emphasis> Max used heap size percentage per JVM.
                    <programlisting language="xml"><![CDATA[<max-size policy="used_heap_percentage">75</max-size>]]></programlisting>
                </para>
            </listitem>
        </orderedlist>
    </para>
</sect2>
