<?xml version='1.0' encoding='UTF-8'?>

<!--
  ~ Copyright (c) 2008-2013, Hazelcast, Inc. All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<sect1 xml:id="SpringMongoDB" version="5.0" xmlns="http://docbook.org/ns/docbook"
       xmlns:xi="http://www.w3.org/2001/XInclude"
       xmlns:xlink="http://www.w3.org/1999/xlink"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd
       http://www.w3.org/1999/xlink http://www.w3.org/1999/xlink.xsd">
    <title>Spring Data - MongoDB</title>
    <para>
        With version 2.1, Hazelcast will support MongoDB persistence integrated with <link xlink:href="http://www.springsource.org/spring-data/mongodb">
        Spring Data-MongoDB</link> module.
        Spring MongoDB module maps your objects to equivalent MongoDB objects.
        To persist your objects into MongoDB you should define MongoDB mapstore in your Spring configuration as follows:
        <programlisting language="xml"><![CDATA[
<mongo:mongo id="mongo" host="localhost" port="27017"/>

<bean id="mongoTemplate"
      class="org.springframework.data.mongodb.core.MongoTemplate">
    <constructor-arg ref="mongo"/>
    <constructor-arg name="databaseName" value="test"/>
</bean>

<bean class="com.hazelcast.spring.mongodb.MongoMapStore" id="mongomapstore">
    <property name="mongoTemplate" ref="mongoTemplate" />
</bean>
]]></programlisting>
        Then you can set this as mapstore for maps that you want to persist into MongoDB.
        <programlisting language="xml"><![CDATA[
<hz:map name="user">
    <hz:map-store enabled="true" implementation="mongomapstore"
                  write-delay-seconds="0">
    </hz:map-store>
</hz:map>
]]></programlisting>
        By default, the key is set as id of the MongoDB object. You can override MongoMapStore class for you custom needs.

    <emphasis role="italic">For more info see
        <link xlink:href="http://static.springsource.org/spring-data/data-mongodb/docs/current/reference/html/">
            Spring Data MongoDB Reference
        </link>.</emphasis>
    </para>
</sect1>
