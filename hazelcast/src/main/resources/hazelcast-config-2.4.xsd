<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2008-2012, Hazelcast, Inc. All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="http://www.hazelcast.com/schema/config"
           targetNamespace="http://www.hazelcast.com/schema/config">
    <xs:element name="hazelcast">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="group" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="license-key" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="management-center" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="properties" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="wan-replication" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="network" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="partition-group" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="executor-service" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="queue" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="map" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="multimap" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="topic" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="semaphore" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="merge-policies" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="listeners" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="security" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="id" type="xs:string" use="optional" default="default"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="map">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="backup-count" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="async-backup-count" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="time-to-live-seconds" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="max-idle-seconds" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="eviction-policy" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="max-size" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="eviction-percentage" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="merge-policy" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="cache-value" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="read-backup-data" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="map-store" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="near-cache" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="wan-replication-ref" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="indexes" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="entry-listeners" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="storage-type" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            Storage type for Hazelcast Enterprise map configuration.
                            Valid values are HEAP and OFFHEAP.
                            Default is HEAP.
                            Not configurable for Hazelcast Community Edition.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element ref="clear-quick" minOccurs="0" maxOccurs="1" />
            </xs:sequence>
            <xs:attribute name="name" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:string"/>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="queue">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="max-size-per-jvm"/>
                <xs:element ref="backing-map-ref"/>
                <xs:element ref="item-listeners" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="name" use="optional" default="default">
                <xs:simpleType>
                    <xs:restriction base="xs:string"/>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="multimap">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="value-collection-type" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="entry-listeners" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="name" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:string"/>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="topic">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="message-listeners" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="name" use="optional" default="default">
                <xs:simpleType>
                    <xs:restriction base="xs:string"/>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="semaphore">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="initial-permits" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="semaphore-factory" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="name" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:string"/>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="initial-permits" default="0">
        <xs:simpleType>
            <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="semaphore-factory">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="class-name" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="enabled" type="xs:boolean" use="optional" default="false"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="network">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="public-address" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="port" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="outbound-ports" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="join" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="interfaces" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="ssl" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="socket-interceptor" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="symmetric-encryption" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="asymmetric-encryption" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="time-to-live-seconds" default="0">
        <xs:annotation>
            <xs:documentation>
                Maximum number of seconds for each entry to stay in the map. Entries that are
                older than &lt;time-to-live-seconds&gt; and not updated for &lt;time-to-live-seconds&gt;
                will get automatically evicted from the map.
                Any integer between 0 and Integer.MAX_VALUE. 0 means infinite. Default is 0.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="max-idle-seconds" default="0">
        <xs:annotation>
            <xs:documentation>
                Maximum number of seconds for each entry to stay idle in the map. Entries that are
                idle(not touched) for more than &lt;max-idle-seconds&gt; will get
                automatically evicted from the map. Entry is touched if get, put or containsKey is called.
                Any integer between 0 and Integer.MAX_VALUE. 0 means infinite. Default is 0.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="tcp-ip">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="required-member" type="xs:string" minOccurs="0" maxOccurs="1"/>
                <xs:choice>
                    <xs:element ref="members"/>
                    <xs:sequence>
                        <xs:element ref="member" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:sequence>
                        <xs:element ref="interface" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:choice>
            </xs:sequence>
            <xs:attribute name="enabled" type="xs:boolean" use="optional" default="false"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="storeType">
        <xs:annotation>
            <xs:documentation>
                The key store type.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="storePath">
        <xs:annotation>
            <xs:documentation>
                The path to the key store.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="storePassword">
        <xs:annotation>
            <xs:documentation>
                The key store password.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="salt" default="thesalt">
        <xs:annotation>
            <xs:documentation>
                The value to use when generating the secret key
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="port">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="ST_port">
                    <xs:attribute name="auto-increment" type="xs:boolean" use="required"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="public-address">
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="outbound-ports">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="ports" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="ports">
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="password" default="drowssap">
        <xs:annotation>
            <xs:documentation>
                The pass phrase to use when generating the secret key.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="name" default="dev">
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="multicast-port" default="54327">
        <xs:simpleType>
            <xs:restriction base="xs:int"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="multicast-group" default="224.2.2.3">
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="multicast-timeout-seconds" default="2">
        <xs:simpleType>
            <xs:restriction base="xs:int"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="multicast-time-to-live-seconds" default="32">
        <xs:simpleType>
            <xs:restriction base="xs:int"/>
        </xs:simpleType>
    </xs:element>

    <xs:element name="access-key">
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="secret-key">
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="region">
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="hostHeader">
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>

    <xs:element name="security-group-name" type="xs:string"/>
    <xs:element name="tag-key" type="xs:string"/>
    <xs:element name="tag-value" type="xs:string"/>

    <xs:element name="multicast">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="multicast-group" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="multicast-port" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="multicast-timeout-seconds" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="multicast-time-to-live-seconds" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="trusted-interfaces" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="enabled" type="xs:boolean" use="optional" default="true"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="trusted-interfaces">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="interface" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="aws">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="access-key" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="secret-key" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="region" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="hostHeader" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="security-group-name" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="tag-key" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="tag-value" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="enabled" type="xs:boolean" use="optional" default="true"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="merge-policy" default="hz.ADD_NEW_ENTRY">
        <xs:annotation>
            <xs:documentation>
                While recovering from split-brain (network partitioning), map entries in the small cluster will merge
                into the bigger cluster
                based on the policy set here. When an entry merge into the cluster, there might an existing entry with
                the same key already.
                Values of these entries might be different for that same key. Which value should be set for the key?
                Conflict is resolved by
                the policy set here. Default policy is hz.ADD_NEW_ENTRY
                There are built-in merge policies such as:
                hz.NO_MERGE : no entry will merge.
                hz.ADD_NEW_ENTRY : entry will be added if the merging entry's key doesn't exist in the cluster.
                hz.HIGHER_HITS : entry with the higher hits wins.
                hz.LATEST_UPDATE : entry with the latest update wins.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <!--                 <xs:enumeration value="hz.NO_MERGE"/> -->
                <!--                 <xs:enumeration value="hz.ADD_NEW_ENTRY"/> -->
                <!--                 <xs:enumeration value="hz.HIGHER_HITS"/> -->
                <!--                 <xs:enumeration value="hz.LATEST_UPDATE"/> -->
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="merge-policies">
        <xs:annotation>
            <xs:documentation>
                Can be used to custom map merge policy implementations.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="map-merge-policy" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="map-merge-policy">
        <xs:annotation>
            <xs:documentation>
                Custom defined merge policy.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="class-name" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="name" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="class-name">
        <xs:annotation>
            <xs:documentation>
                Fully qualified class name
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="max-size-per-jvm">
        <xs:annotation>
            <xs:documentation>
                Maximum size of the queue. When a JVM's local queue size reaches the maximum,
                all put/offer operations will get blocked until the queue size of the JVM goes down below the maximum.
                Any integer between 0 and Integer.MAX_VALUE. 0 means Integer.MAX_VALUE. Default is 0.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:short"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="backing-map-ref">
        <xs:annotation>
            <xs:documentation>
                Name of the backing distributed map configuration.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="max-size" default="0">
        <xs:annotation>
            <xs:documentation>
                Maximum size of the map. When max size is reached, map is evicted based on the policy defined.
                Any integer between 0 and Integer.MAX_VALUE. 0 means Integer.MAX_VALUE. Default is 0.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name="policy" use="optional" default="cluster_wide_map_size"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="max-pool-size" default="64">
        <xs:annotation>
            <xs:documentation>
                The maximum pool size.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:short">
                <xs:minInclusive value="0"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="keyPassword">
        <xs:annotation>
            <xs:documentation>
                The private key password.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="keyAlias">
        <xs:annotation>
            <xs:documentation>
                The private key alias.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="keep-alive-seconds" default="60">
        <xs:simpleType>
            <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="join">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="multicast" minOccurs="0"/>
                <xs:element ref="tcp-ip" minOccurs="0"/>
                <xs:element ref="aws" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="iteration-count" default="19">
        <xs:annotation>
            <xs:documentation>
                The iteration count to use when generating the secret key.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:byte">
                <xs:minInclusive value="0"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="interfaces">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="interface"/>
            </xs:sequence>
            <xs:attribute name="enabled" type="xs:boolean" use="optional" default="false"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="interface" default="127.0.0.1">
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="member" default="127.0.0.1">
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="members" default="127.0.0.1">
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="group">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="name"/>
                <xs:element ref="password"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:simpleType name="propertyNameEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="hazelcast.merge.first.run.delay.seconds"/>
            <xs:enumeration value="hazelcast.merge.next.run.delay.seconds"/>
            <xs:enumeration value="hazelcast.redo.wait.millis"/>
            <xs:enumeration value="hazelcast.socket.bind.any"/>
            <xs:enumeration value="hazelcast.serializer.gzip.enabled"/>
            <xs:enumeration value="hazelcast.serializer.shared"/>
            <xs:enumeration value="hazelcast.shutdownhook.enabled"/>
            <xs:enumeration value="hazelcast.wait.seconds.before.join"/>
            <xs:enumeration value="hazelcast.max.no.heartbeat.seconds"/>
            <xs:enumeration value="hazelcast.initial.wait.seconds"/>
            <xs:enumeration value="hazelcast.restart.on.max.idle"/>
            <xs:enumeration value="hazelcast.map.partition.count"/>
            <xs:enumeration value="hazelcast.map.remove.delay.seconds"/>
            <xs:enumeration value="hazelcast.map.cleanup.delay.seconds"/>
            <xs:enumeration value="hazelcast.executor.query.thread.count"/>
            <xs:enumeration value="hazelcast.executor.event.thread.count"/>
            <xs:enumeration value="hazelcast.executor.migration.thread.count"/>
            <xs:enumeration value="hazelcast.executor.client.thread.count"/>
            <xs:enumeration value="hazelcast.executor.store.thread.count"/>
            <xs:enumeration value="hazelcast.log.state"/>
            <xs:enumeration value="hazelcast.jmx"/>
            <xs:enumeration value="hazelcast.jmx.detailed"/>
            <xs:enumeration value="hazelcast.mancenter.enabled"/>
            <xs:enumeration value="hazelcast.memcache.enabled"/>
            <xs:enumeration value="hazelcast.rest.enabled"/>
            <xs:enumeration value="hazelcast.map.load.chunk.size"/>
            <xs:enumeration value="hazelcast.in.thread.priority"/>
            <xs:enumeration value="hazelcast.out.thread.priority"/>
            <xs:enumeration value="hazelcast.service.thread.priority"/>
            <xs:enumeration value="hazelcast.socket.receive.buffer.size"/>
            <xs:enumeration value="hazelcast.socket.send.buffer.size"/>
            <xs:enumeration value="hazelcast.socket.keep.alive"/>
            <xs:enumeration value="hazelcast.socket.no.delay"/>
            <xs:enumeration value="hazelcast.heartbeat.interval.seconds"/>
            <xs:enumeration value="hazelcast.icmp.enabled"/>
            <xs:enumeration value="hazelcast.initial.min.cluster.size"/>
            <xs:enumeration value="hazelcast.mc.atomicnumber.excludes"/>
            <xs:enumeration value="hazelcast.mc.countdownlatch.excludes"/>
            <xs:enumeration value="hazelcast.mc.map.excludes"/>
            <xs:enumeration value="hazelcast.mc.queue.excludes"/>
            <xs:enumeration value="hazelcast.mc.semaphore.excludes"/>
            <xs:enumeration value="hazelcast.mc.topic.excludes"/>
            <xs:enumeration value="hazelcast.version.check.enabled"/>
            <xs:enumeration value="hazelcast.map.max.backup.count"/>
            <xs:enumeration value="hazelcast.topic.flow.control.enabled"/>
            <xs:enumeration value="hazelcast.max.wait.seconds.before.join"/>
            <xs:enumeration value="hazelcast.mc.max.visible.instance.count"/>
            <xs:enumeration value="hazelcast.logging.type"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="propertyNameString">
        <xs:restriction base="non-space-string"/>
    </xs:simpleType>
    <xs:simpleType name="propertyName">
        <xs:union memberTypes="propertyNameEnum propertyNameString"/>
    </xs:simpleType>
    <xs:element name="property">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name="name" use="required" type="propertyName"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="properties">
        <xs:complexType>
            <xs:sequence minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="property"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="executor-service">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="core-pool-size"/>
                <xs:element ref="max-pool-size"/>
                <xs:element ref="keep-alive-seconds"/>
            </xs:sequence>
            <xs:attribute name="name" use="optional" default="default">
                <xs:simpleType>
                    <xs:restriction base="xs:string"/>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="eviction-policy" default="NONE">
        <xs:annotation>
            <xs:documentation>
                Valid values are:
                NONE (no eviction),
                LRU (Least Recently Used),
                LFU (Least Frequently Used).
                NONE is the default.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:enumeration value="NONE"/>
                <xs:enumeration value="LRU"/>
                <xs:enumeration value="LFU"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="eviction-percentage" default="25">
        <xs:annotation>
            <xs:documentation>
                When max. size is reached, specified percentage of the map will be evicted. Any integer between 0 and
                100.
                If 25 is set for example, 25% of the entries will get evicted.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:byte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="core-pool-size" default="16">
        <xs:simpleType>
            <xs:restriction base="xs:short">
                <xs:minInclusive value="0"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="backup-count" default="1">
        <xs:annotation>
            <xs:documentation>
                Number of backups. If 1 is set as the backup-count for example,
                then all entries of the map will be copied to another JVM for
                fail-safety. Valid numbers are 0 (no backup), 1, 2, 3.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:byte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="5"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="async-backup-count" default="0">
        <xs:annotation>
            <xs:documentation>
                Number of async backups. If 1 is set as the backup-count for example,
                then all entries of the map will be copied to another JVM for
                fail-safety. Valid numbers are 0 (no backup), 1, 2, 3.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:byte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="5"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="symmetric-encryption">
        <xs:annotation>
            <xs:documentation>
                encryption algorithm such as
                DES/ECB/PKCS5Padding,
                PBEWithMD5AndDES,
                AES/CBC/PKCS5Padding,
                Blowfish,
                DESede
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="algorithm"/>
                <xs:element ref="salt"/>
                <xs:element ref="password"/>
                <xs:element ref="iteration-count"/>
            </xs:sequence>
            <xs:attribute name="enabled" type="xs:boolean" use="optional" default="false"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="asymmetric-encryption">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="algorithm"/>
                <xs:element ref="keyPassword"/>
                <xs:element ref="keyAlias"/>
                <xs:element ref="storeType"/>
                <xs:element ref="storePassword"/>
                <xs:element ref="storePath"/>
            </xs:sequence>
            <xs:attribute name="enabled" type="xs:boolean" use="optional" default="false"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="algorithm">
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="map-store">
        <xs:complexType>
            <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="1">
                    <xs:element ref="class-name"/>
                    <xs:element ref="factory-class-name"/>
                </xs:choice>
                <xs:element ref="write-delay-seconds" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="properties" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="enabled" default="true" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="factory-class-name" type="xs:string"/>
    <xs:element name="write-delay-seconds" type="xs:integer" default="0"/>
    <xs:element name="near-cache">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="max-size" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="time-to-live-seconds" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="max-idle-seconds" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="eviction-policy" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="invalidate-on-change" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="invalidate-on-change" type="xs:boolean" default="true"/>
    <xs:element name="wan-replication">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="target-cluster" minOccurs="1" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="name" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:string"/>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="target-cluster">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="replication-impl" minOccurs="1" maxOccurs="1"/>
                <xs:element ref="end-points" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="group-name" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:string"/>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="group-password" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:string"/>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="replication-impl">
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="end-points">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="address" minOccurs="1" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="address" default="127.0.0.1">
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="wan-replication-ref">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="merge-policy" minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="name" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:string"/>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="ssl">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="factory-class-name" minOccurs="0" maxOccurs="1" />
                <xs:element ref="properties" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="enabled" default="false" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="socket-interceptor">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="class-name" minOccurs="0" maxOccurs="1" />
                <xs:element ref="properties" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="enabled" default="false" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="storage-type" default="HEAP">
        <xs:simpleType>
            <xs:restriction base="non-space-string">
                <xs:enumeration value="HEAP"/>
                <xs:enumeration value="OFFHEAP"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="value-collection-type">
        <xs:simpleType>
            <xs:restriction base="non-space-string">
                <xs:enumeration value="SET"/>
                <xs:enumeration value="LIST"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="license-key" type="xs:string" />
    <xs:simpleType name="ST_port">
        <xs:restriction base="xs:short"/>
    </xs:simpleType>
    <xs:simpleType name="non-space-string">
        <xs:restriction base="xs:string">
            <xs:pattern value="\S.*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="entry-listeners">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="entry-listener" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="item-listeners">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="item-listener" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="message-listeners">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="message-listener" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="listeners">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="listener" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="listener" type="listener-base">
        <xs:annotation>
            <xs:documentation>One of membership-listener, instance-listener or migration-listener</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="entry-listener" type="entry-listener"/>
    <xs:element name="item-listener" type="item-listener"/>
    <xs:element name="message-listener" type="listener-base"/>
    <xs:complexType name="listener-base">
        <xs:simpleContent>
            <xs:extension base="xs:string"/>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="item-listener">
        <xs:simpleContent>
            <xs:extension base="listener-base">
                <xs:attribute name="include-value" type="xs:boolean" use="optional" default="true"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="entry-listener">
        <xs:simpleContent>
            <xs:extension base="item-listener">
                <xs:attribute name="local" type="xs:boolean" use="optional" default="false"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:element name="indexes">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="index" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="index">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name="ordered" type="xs:boolean" use="optional" default="false"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="partition-group">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="member-group" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="enabled" type="xs:boolean" default="false"/>
            <xs:attribute name="group-type">
                <xs:simpleType>
                    <xs:restriction base="non-space-string">
                        <xs:enumeration value="HOST_AWARE"/>
                        <xs:enumeration value="CUSTOM"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="member-group">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="interface" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="management-center">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name="enabled" type="xs:boolean" default="false" use="optional"/>
                    <xs:attribute name="update-interval" type="xs:integer" default="3" use="optional"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="cache-value" type="xs:boolean" />
    <xs:element name="read-backup-data" type="xs:boolean" />
    <xs:element name="clear-quick" type="xs:boolean" default="false" />
    <xs:element name="security">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="member-credentials-factory" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="member-login-modules" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="client-login-modules" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="client-permission-policy" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="client-permissions" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="enabled" type="xs:boolean" default="false"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="member-credentials-factory">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="properties" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="class-name" type="non-space-string" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="login-modules">
        <xs:sequence>
            <xs:element ref="login-module" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="member-login-modules" type="login-modules"/>
    <xs:element name="client-login-modules" type="login-modules"/>
    <xs:element name="login-module">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="properties" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="class-name" type="non-space-string" use="required"/>
            <xs:attribute name="usage" use="optional" default="REQUIRED">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="REQUIRED"/>
                        <xs:enumeration value="OPTIONAL"/>
                        <xs:enumeration value="REQUISITE"/>
                        <xs:enumeration value="SUFFICIENT"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="client-permission-policy">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="properties" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="class-name" type="non-space-string" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="client-permissions">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="all-permissions" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="map-permission" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="queue-permission" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="multimap-permission" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="topic-permission" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="list-permission" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="set-permission" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="lock-permission" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="atomic-number-permission" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="countdown-latch-permission" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="semaphore-permission" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="id-generator-permission" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="executor-service-permission" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="transaction-permission" minOccurs="0" maxOccurs="1"/>
                <xs:element ref="listener-permisson" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="base-permisson">
        <xs:sequence>
            <xs:element ref="endpoints" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="principal" type="xs:string" use="optional" default="*">
            <xs:annotation>
                <xs:documentation>
                    Name of the principal. Wildcards(*) can be used.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="instance-permisson">
        <xs:complexContent>
            <xs:extension base="base-permisson">
                <xs:sequence>
                    <xs:element ref="actions" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="name" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>
                            Name of the permission. Wildcards(*) can be used.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="listener-permisson">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="base-permisson">
                    <xs:attribute name="name" use="required">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="all"/>
                                <xs:enumeration value="instance"/>
                                <xs:enumeration value="member"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="endpoints">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="endpoint" minOccurs="1" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="endpoint" default="127.0.0.1">
        <xs:annotation>
            <xs:documentation>
                Endpoint address of principal. Wildcards(*) can be used.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string"/>
        </xs:simpleType>
    </xs:element>
    <xs:element name="actions">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="action" minOccurs="1" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="action">
        <xs:annotation>
            <xs:documentation>
                Permission actions that are permitted on Hazelcast instance objects.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:enumeration value="all"/>
                <xs:enumeration value="create"/>
                <xs:enumeration value="destroy"/>
                <xs:enumeration value="put"/>
                <xs:enumeration value="add"/>
                <xs:enumeration value="get"/>
                <xs:enumeration value="set"/>
                <xs:enumeration value="remove"/>
                <xs:enumeration value="offer"/>
                <xs:enumeration value="poll"/>
                <xs:enumeration value="take"/>
                <xs:enumeration value="lock"/>
                <xs:enumeration value="listen"/>
                <xs:enumeration value="publish"/>
                <xs:enumeration value="increment"/>
                <xs:enumeration value="decrement"/>
                <xs:enumeration value="execute"/>
                <xs:enumeration value="countdown"/>
                <xs:enumeration value="acquire"/>
                <xs:enumeration value="release"/>
                <xs:enumeration value="drain"/>
                <xs:enumeration value="statistics"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="map-permission" type="instance-permisson"/>
    <xs:element name="queue-permission" type="instance-permisson"/>
    <xs:element name="multimap-permission" type="instance-permisson"/>
    <xs:element name="topic-permission" type="instance-permisson"/>
    <xs:element name="list-permission" type="instance-permisson"/>
    <xs:element name="set-permission" type="instance-permisson"/>
    <xs:element name="lock-permission" type="instance-permisson"/>
    <xs:element name="atomic-number-permission" type="instance-permisson"/>
    <xs:element name="countdown-latch-permission" type="instance-permisson"/>
    <xs:element name="semaphore-permission" type="instance-permisson"/>
    <xs:element name="id-generator-permission" type="instance-permisson"/>
    <xs:element name="executor-service-permission" type="instance-permisson"/>
    <xs:element name="transaction-permission" type="base-permisson"/>
    <xs:element name="all-permissions" type="base-permisson"/>
</xs:schema>
