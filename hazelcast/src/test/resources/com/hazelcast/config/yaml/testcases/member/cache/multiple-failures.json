{
  "instance": {
    "hazelcast": {
      "cache": {
        "default": {
          "key-type": {
            "class-name": null
          },
          "value-type": {
            "class-name": -1
          },
          "statistics-enabled": "false",
          "management-enabled": "false",
          "read-through": "true",
          "write-through": "true",
          "cache-loader-factory": {
            "class-name": {}
          },
          "cache-writer-factory": {
            "class-name": []
          },
          "expiry-policy-factory": {
            "class-name": 2
          },
          "cache-entry-listeners": [
            {
              "old-value-required": "false",
              "synchronous": "false",
              "cache-entry-listener-factory": {},
              "cache-entry-event-filter-factory": {
                "class-name": false
              }
            }
          ],
          "in-memory-format": "INVALID",
          "backup-count": -1,
          "async-backup-count": -2,
          "eviction": {
            "size": "1000",
            "max-size-policy": "INVALID",
            "eviction-policy": "ALSO INVALID"
          },
          "wan-replication-ref": {
            "name": null,
            "merge-policy-class-name": "INVALID",
            "republishing-enabled": "true",
            "filters": {
              "": ""
            }
          },
          "split-brain-protection-ref": false,
          "partition-lost-listeners": [
            2
          ],
          "merge-policy": {
            "batch-size": "100",
            "class-name": "INVALID"
          },
          "hot-restart": {
            "enabled": "false",
            "fsync": "false"
          },
          "event-journal": {
            "enabled": "false",
            "capacity": "10000",
            "time-to-live-seconds": "0"
          },
          "disable-per-entry-invalidation-events": "true"
        }
      }
    }
  },
  "error": {
    "schemaLocation": "#/definitions/Cache/additionalProperties",
    "pointerToViolation": "#/hazelcast/cache/default",
    "causingExceptions": [
      {
        "schemaLocation": "#/definitions/AsyncBackupCount",
        "pointerToViolation": "#/hazelcast/cache/default/async-backup-count",
        "causingExceptions": [],
        "keyword": "minimum",
        "message": "-2 is not greater or equal to 0"
      },
      {
        "schemaLocation": "#/definitions/BackupCount",
        "pointerToViolation": "#/hazelcast/cache/default/backup-count",
        "causingExceptions": [],
        "keyword": "minimum",
        "message": "-1 is not greater or equal to 0"
      },
      {
        "schemaLocation": "#/definitions/Cache/additionalProperties/properties/cache-entry-listeners/items",
        "pointerToViolation": "#/hazelcast/cache/default/cache-entry-listeners/0",
        "causingExceptions": [
          {
            "schemaLocation": "#/definitions/Cache/additionalProperties/properties/cache-entry-listeners/items/properties/old-value-required",
            "pointerToViolation": "#/hazelcast/cache/default/cache-entry-listeners/0/old-value-required",
            "causingExceptions": [],
            "keyword": "type",
            "message": "expected type: Boolean, found: String"
          },
          {
            "schemaLocation": "#/definitions/Cache/additionalProperties/properties/cache-entry-listeners/items/properties/synchronous",
            "pointerToViolation": "#/hazelcast/cache/default/cache-entry-listeners/0/synchronous",
            "causingExceptions": [],
            "keyword": "type",
            "message": "expected type: Boolean, found: String"
          },
          {
            "schemaLocation": "#/definitions/ClassNameObj",
            "pointerToViolation": "#/hazelcast/cache/default/cache-entry-listeners/0/cache-entry-listener-factory",
            "causingExceptions": [],
            "keyword": "required",
            "message": "required key [class-name] not found"
          },
          {
            "schemaLocation": "#/definitions/ClassNameObj/properties/class-name",
            "pointerToViolation": "#/hazelcast/cache/default/cache-entry-listeners/0/cache-entry-event-filter-factory/class-name",
            "causingExceptions": [],
            "keyword": "type",
            "message": "expected type: String, found: Boolean"
          }
        ],
        "message": "4 schema violations found"
      },
      {
        "schemaLocation": "#/definitions/Cache/additionalProperties/properties/disable-per-entry-invalidation-events",
        "pointerToViolation": "#/hazelcast/cache/default/disable-per-entry-invalidation-events",
        "causingExceptions": [],
        "keyword": "type",
        "message": "expected type: Boolean, found: String"
      },
      {
        "schemaLocation": "#/definitions/Cache/additionalProperties/properties/event-journal",
        "pointerToViolation": "#/hazelcast/cache/default/event-journal",
        "causingExceptions": [
          {
            "schemaLocation": "#/definitions/Cache/additionalProperties/properties/event-journal/properties/capacity",
            "pointerToViolation": "#/hazelcast/cache/default/event-journal/capacity",
            "causingExceptions": [],
            "keyword": "type",
            "message": "expected type: Integer, found: String"
          },
          {
            "schemaLocation": "#/definitions/Cache/additionalProperties/properties/event-journal/properties/enabled",
            "pointerToViolation": "#/hazelcast/cache/default/event-journal/enabled",
            "causingExceptions": [],
            "keyword": "type",
            "message": "expected type: Boolean, found: String"
          },
          {
            "schemaLocation": "#/definitions/Cache/additionalProperties/properties/event-journal/properties/time-to-live-seconds",
            "pointerToViolation": "#/hazelcast/cache/default/event-journal/time-to-live-seconds",
            "causingExceptions": [],
            "keyword": "type",
            "message": "expected type: Integer, found: String"
          }
        ],
        "message": "3 schema violations found"
      },
      {
        "schemaLocation": "#/definitions/Cache/additionalProperties/properties/expiry-policy-factory",
        "pointerToViolation": "#/hazelcast/cache/default/expiry-policy-factory",
        "causingExceptions": [
          {
            "schemaLocation": "#/definitions/Cache/additionalProperties/properties/expiry-policy-factory/anyOf/1",
            "pointerToViolation": "#/hazelcast/cache/default/expiry-policy-factory",
            "causingExceptions": [
              {
                "schemaLocation": "#/definitions/Cache/additionalProperties/properties/expiry-policy-factory/anyOf/1",
                "pointerToViolation": "#/hazelcast/cache/default/expiry-policy-factory",
                "causingExceptions": [],
                "keyword": "additionalProperties",
                "message": "extraneous key [class-name] is not permitted"
              },
              {
                "schemaLocation": "#/definitions/Cache/additionalProperties/properties/expiry-policy-factory/anyOf/1",
                "pointerToViolation": "#/hazelcast/cache/default/expiry-policy-factory",
                "causingExceptions": [],
                "keyword": "required",
                "message": "required key [timed-expiry-policy-factory] not found"
              }
            ],
            "message": "2 schema violations found"
          },
          {
            "schemaLocation": "#/definitions/ClassNameObj/properties/class-name",
            "pointerToViolation": "#/hazelcast/cache/default/expiry-policy-factory/class-name",
            "causingExceptions": [],
            "keyword": "type",
            "message": "expected type: String, found: Integer"
          }
        ],
        "keyword": "anyOf",
        "message": "#: no subschema matched out of the total 2 subschemas"
      },
      {
        "schemaLocation": "#/definitions/Cache/additionalProperties/properties/hot-restart",
        "pointerToViolation": "#/hazelcast/cache/default/hot-restart",
        "causingExceptions": [
          {
            "schemaLocation": "#/definitions/Cache/additionalProperties/properties/hot-restart/properties/enabled",
            "pointerToViolation": "#/hazelcast/cache/default/hot-restart/enabled",
            "causingExceptions": [],
            "keyword": "type",
            "message": "expected type: Boolean, found: String"
          },
          {
            "schemaLocation": "#/definitions/Cache/additionalProperties/properties/hot-restart/properties/fsync",
            "pointerToViolation": "#/hazelcast/cache/default/hot-restart/fsync",
            "causingExceptions": [],
            "keyword": "type",
            "message": "expected type: Boolean, found: String"
          }
        ],
        "message": "2 schema violations found"
      },
      {
        "schemaLocation": "#/definitions/Cache/additionalProperties/properties/management-enabled",
        "pointerToViolation": "#/hazelcast/cache/default/management-enabled",
        "causingExceptions": [],
        "keyword": "type",
        "message": "expected type: Boolean, found: String"
      },
      {
        "schemaLocation": "#/definitions/Cache/additionalProperties/properties/partition-lost-listeners/items",
        "pointerToViolation": "#/hazelcast/cache/default/partition-lost-listeners/0",
        "causingExceptions": [],
        "keyword": "type",
        "message": "expected type: String, found: Integer"
      },
      {
        "schemaLocation": "#/definitions/Cache/additionalProperties/properties/read-through",
        "pointerToViolation": "#/hazelcast/cache/default/read-through",
        "causingExceptions": [],
        "keyword": "type",
        "message": "expected type: Boolean, found: String"
      },
      {
        "schemaLocation": "#/definitions/Cache/additionalProperties/properties/split-brain-protection-ref",
        "pointerToViolation": "#/hazelcast/cache/default/split-brain-protection-ref",
        "causingExceptions": [],
        "keyword": "type",
        "message": "expected type: String, found: Boolean"
      },
      {
        "schemaLocation": "#/definitions/Cache/additionalProperties/properties/statistics-enabled",
        "pointerToViolation": "#/hazelcast/cache/default/statistics-enabled",
        "causingExceptions": [],
        "keyword": "type",
        "message": "expected type: Boolean, found: String"
      },
      {
        "schemaLocation": "#/definitions/Cache/additionalProperties/properties/wan-replication-ref",
        "pointerToViolation": "#/hazelcast/cache/default/wan-replication-ref",
        "causingExceptions": [
          {
            "schemaLocation": "#/definitions/Cache/additionalProperties/properties/wan-replication-ref/properties/filters",
            "pointerToViolation": "#/hazelcast/cache/default/wan-replication-ref/filters",
            "causingExceptions": [],
            "keyword": "type",
            "message": "expected type: JSONArray, found: JSONObject"
          },
          {
            "schemaLocation": "#/definitions/Cache/additionalProperties/properties/wan-replication-ref/properties/merge-policy-class-name",
            "pointerToViolation": "#/hazelcast/cache/default/wan-replication-ref/merge-policy-class-name",
            "causingExceptions": [],
            "keyword": "enum",
            "message": "INVALID is not a valid enum value"
          },
          {
            "schemaLocation": "#/definitions/Cache/additionalProperties/properties/wan-replication-ref/properties/name",
            "pointerToViolation": "#/hazelcast/cache/default/wan-replication-ref/name",
            "causingExceptions": [],
            "keyword": "type",
            "message": "expected type: String, found: Null"
          },
          {
            "schemaLocation": "#/definitions/Cache/additionalProperties/properties/wan-replication-ref/properties/republishing-enabled",
            "pointerToViolation": "#/hazelcast/cache/default/wan-replication-ref/republishing-enabled",
            "causingExceptions": [],
            "keyword": "type",
            "message": "expected type: Boolean, found: String"
          }
        ],
        "message": "4 schema violations found"
      },
      {
        "schemaLocation": "#/definitions/Cache/additionalProperties/properties/write-through",
        "pointerToViolation": "#/hazelcast/cache/default/write-through",
        "causingExceptions": [],
        "keyword": "type",
        "message": "expected type: Boolean, found: String"
      },
      {
        "schemaLocation": "#/definitions/ClassNameObj/properties/class-name",
        "pointerToViolation": "#/hazelcast/cache/default/cache-loader-factory/class-name",
        "causingExceptions": [],
        "keyword": "type",
        "message": "expected type: String, found: JSONObject"
      },
      {
        "schemaLocation": "#/definitions/ClassNameObj/properties/class-name",
        "pointerToViolation": "#/hazelcast/cache/default/cache-writer-factory/class-name",
        "causingExceptions": [],
        "keyword": "type",
        "message": "expected type: String, found: JSONArray"
      },
      {
        "schemaLocation": "#/definitions/ClassNameObj/properties/class-name",
        "pointerToViolation": "#/hazelcast/cache/default/key-type/class-name",
        "causingExceptions": [],
        "keyword": "type",
        "message": "expected type: String, found: Null"
      },
      {
        "schemaLocation": "#/definitions/ClassNameObj/properties/class-name",
        "pointerToViolation": "#/hazelcast/cache/default/value-type/class-name",
        "causingExceptions": [],
        "keyword": "type",
        "message": "expected type: String, found: Integer"
      },
      {
        "schemaLocation": "#/definitions/Eviction",
        "pointerToViolation": "#/hazelcast/cache/default/eviction",
        "causingExceptions": [
          {
            "schemaLocation": "#/definitions/Eviction/properties/eviction-policy",
            "pointerToViolation": "#/hazelcast/cache/default/eviction/eviction-policy",
            "causingExceptions": [],
            "keyword": "enum",
            "message": "ALSO INVALID is not a valid enum value"
          },
          {
            "schemaLocation": "#/definitions/Eviction/properties/max-size-policy",
            "pointerToViolation": "#/hazelcast/cache/default/eviction/max-size-policy",
            "causingExceptions": [],
            "keyword": "enum",
            "message": "INVALID is not a valid enum value"
          },
          {
            "schemaLocation": "#/definitions/Eviction/properties/size",
            "pointerToViolation": "#/hazelcast/cache/default/eviction/size",
            "causingExceptions": [],
            "keyword": "type",
            "message": "expected type: Integer, found: String"
          }
        ],
        "message": "3 schema violations found"
      },
      {
        "schemaLocation": "#/definitions/InMemoryFormat",
        "pointerToViolation": "#/hazelcast/cache/default/in-memory-format",
        "causingExceptions": [],
        "keyword": "enum",
        "message": "INVALID is not a valid enum value"
      },
      {
        "schemaLocation": "#/definitions/MergePolicy/properties/batch-size",
        "pointerToViolation": "#/hazelcast/cache/default/merge-policy/batch-size",
        "causingExceptions": [],
        "keyword": "type",
        "message": "expected type: Integer, found: String"
      }
    ],
    "message": "34 schema violations found"
  }
}
