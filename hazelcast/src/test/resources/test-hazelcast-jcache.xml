<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2008-2018, Hazelcast, Inc. All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<hazelcast xmlns="http://www.hazelcast.com/schema/config"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.hazelcast.com/schema/config
           http://www.hazelcast.com/schema/config/hazelcast-config-3.11.xsd">

    <instance-name>test-hazelcast-jcache</instance-name>

    <group>
        <name>test-group1</name>
        <password>test-pass1</password>
    </group>

    <cache name="cache1">
        <key-type class-name="java.lang.Object"/>
        <value-type class-name="java.lang.Object"/>
        <statistics-enabled>true</statistics-enabled>
        <management-enabled>true</management-enabled>
        <read-through>true</read-through>
        <write-through>true</write-through>
        <cache-loader-factory class-name="com.hazelcast.config.CacheConfigTest$MyCacheLoaderFactory"/>
        <cache-writer-factory class-name="com.hazelcast.config.CacheConfigTest$MyCacheWriterFactory"/>
        <expiry-policy-factory class-name="com.hazelcast.config.CacheConfigTest$MyExpirePolicyFactory"/>
        <eviction size="50" max-size-policy="ENTRY_COUNT" eviction-policy="LFU"/>
        <cache-entry-listeners>
            <cache-entry-listener old-value-required="false" synchronous="false">
                <cache-entry-listener-factory class-name="com.hazelcast.config.CacheConfigTest$MyEntryListenerFactory"/>
                <cache-entry-event-filter-factory class-name="com.hazelcast.config.CacheConfigTest$MyEntryEventFilterFactory"/>
            </cache-entry-listener>
           <cache-entry-listener old-value-required="true" synchronous="true">
                <cache-entry-listener-factory class-name="com.hazelcast.config.CacheConfigTest$MySyncEntryListenerFactory"/>
                <cache-entry-event-filter-factory class-name="com.hazelcast.config.CacheConfigTest$MySyncEntryEventFilterFactory"/>
            </cache-entry-listener>
        </cache-entry-listeners>
        <backup-count>3</backup-count>
        <async-backup-count>2</async-backup-count>
        <disable-per-entry-invalidation-events>true</disable-per-entry-invalidation-events>
    </cache>

    <cache name="cacheWithCustomEvictionPolicyComparator">
        <eviction size="50" max-size-policy="ENTRY_COUNT"
                  comparator-class-name="my-custom-eviction-policy-comparator"/>
    </cache>

    <cache name="cacheWithTimedCreatedExpiryPolicyFactory">
        <expiry-policy-factory>
               <timed-expiry-policy-factory expiry-policy-type="CREATED"
                                            duration-amount="1"
                                            time-unit="DAYS"/>
        </expiry-policy-factory>
    </cache>

    <cache name="cacheWithTimedAccessedExpiryPolicyFactory">
        <expiry-policy-factory>
            <timed-expiry-policy-factory expiry-policy-type="ACCESSED"
                                         duration-amount="2"
                                         time-unit="HOURS"/>
        </expiry-policy-factory>
    </cache>

    <cache name="cacheWithTimedModifiedExpiryPolicyFactory">
        <expiry-policy-factory>
            <timed-expiry-policy-factory expiry-policy-type="MODIFIED"
                                         duration-amount="3"
                                         time-unit="MINUTES"/>
        </expiry-policy-factory>
    </cache>

    <cache name="cacheWithTimedTouchedExpiryPolicyFactory">
        <expiry-policy-factory>
            <timed-expiry-policy-factory expiry-policy-type="TOUCHED"
                                         duration-amount="4"
                                         time-unit="SECONDS"/>
        </expiry-policy-factory>
    </cache>

    <cache name="cacheWithTimedEternalExpiryPolicyFactory">
        <expiry-policy-factory>
            <timed-expiry-policy-factory expiry-policy-type="ETERNAL"/>
        </expiry-policy-factory>
    </cache>

    <cache name="cacheWithDefaultMergePolicy"/>
    <cache name="cacheWithCustomMergePolicy">
        <merge-policy>MyDummyMergePolicy</merge-policy>
    </cache>

    <cache name="testCache">
        <key-type class-name="java.lang.Integer"/>
        <value-type class-name="java.lang.String"/>
        <statistics-enabled>false</statistics-enabled>
        <management-enabled>false</management-enabled>
    </cache>

    <cache name="wanRefTestCache">
        <key-type class-name="java.lang.Integer"/>
        <value-type class-name="java.lang.String"/>
        <statistics-enabled>false</statistics-enabled>
        <management-enabled>false</management-enabled>
        <wan-replication-ref name="testWanRef">
            <merge-policy>TestMergePolicy</merge-policy>
        </wan-replication-ref>
    </cache>

    <cache name="wanRefDisabledRepublishingTestCache">
        <key-type class-name="java.lang.Integer"/>
        <value-type class-name="java.lang.String"/>
        <statistics-enabled>false</statistics-enabled>
        <management-enabled>false</management-enabled>
        <wan-replication-ref name="testWanRef">
            <merge-policy>TestMergePolicy</merge-policy>
            <republishing-enabled>false</republishing-enabled>
        </wan-replication-ref>
    </cache>
</hazelcast>
