<!--
  ~ Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!--
    A comprehensive example of Hazelcast configuration with basic network configuration.

    Hazelcast resolves configuration using the following approach:

    1. First is checks to see if the ’hazelcast.config’ system property is set. If it is, then the value is used as the path.

       The config option can be set by adding the following to the java command: -Dhazelcast.config=path_to_the_hazelcast.xml.

       The value can be a normal file path, but can also be a classpath reference if it is prefixed with ’classpath:’.

    2. Otherwise it checks if there is a ’hazelcast.xml’ in the working directory.

    3. After that it checks if there is a ’hazelcast.xml’ in the root of the classpath.

    4. If a configuration cannot be found, Hazelcast will use the default hazelcast configuration
       ’hazelcast-default.xml’, which is included in the the Hazelcast jar
-->

<hazelcast xmlns="http://www.hazelcast.com/schema/config"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.hazelcast.com/schema/config
           http://www.hazelcast.com/schema/config/hazelcast-config-4.1.xsd">

    <import resource="hazelcast-fullconfig-without-network.xml"/>

    <network>
        <public-address>dummy</public-address>
        <port auto-increment="true" port-count="100">5701</port>
        <!-- If the address should be reused. See NetworkConfig.setReuseAddress for more information. -->
        <reuse-address>true</reuse-address>
        <outbound-ports>
            <ports>33000-35000</ports>
            <ports>37000,37001,37002,37003</ports>
            <ports>38000,38500-38600</ports>
        </outbound-ports>
        <join>
            <auto-detection enabled="false"/>
            <multicast enabled="true" loopbackModeEnabled="true">
                <multicast-group>1.2.3.4</multicast-group>
                <multicast-port>12345</multicast-port>
                <multicast-timeout-seconds>5</multicast-timeout-seconds>
                <multicast-time-to-live>10</multicast-time-to-live>
                <trusted-interfaces>
                    <interface>10.10.1.*</interface>
                    <interface>10.10.2.*</interface>
                </trusted-interfaces>
            </multicast>
            <tcp-ip enabled="false" connection-timeout-seconds="123">
                <required-member>dummy</required-member>
                <member>dummy1</member>
                <member>dummy2</member>
                <interface>127.0.0.10</interface>
                <members>dummy3,dummy4</members>
                <member-list>
                    <member>dummy5</member>
                    <member>dummy6</member>
                </member-list>
            </tcp-ip>
            <aws enabled="false">
                <access-key>my-access-key</access-key>
                <secret-key>my-secret-key</secret-key>
                <iam-role>dummy</iam-role>
                <!--optional, default is us-east-1 -->
                <region>us-west-1</region>
                <!--optional, default is ec2.amazonaws.com. If set, region shouldn't be set as it will override this property -->
                <host-header>ec2.amazonaws.com</host-header>
                <!-- optional, only instances belonging to this group will be discovered, default will try all running instances -->
                <security-group-name>hazelcast-sg</security-group-name>
                <tag-key>type</tag-key>
                <tag-value>hz-nodes</tag-value>
                <use-public-ip>true</use-public-ip>
            </aws>
            <gcp enabled="false">
                <zones>us-east1-b,us-east1-c</zones>
            </gcp>
            <azure enabled="false">
                <instance-metadata-available>false</instance-metadata-available>
                <client-id>CLIENT_ID</client-id>
                <client-secret>CLIENT_SECRET</client-secret>
                <tenant-id>TENANT_ID</tenant-id>
                <subscription-id>SUB_ID</subscription-id>
                <resource-group>RESOURCE-GROUP-NAME</resource-group>
                <scale-set>SCALE-SET-NAME</scale-set>
                <tag>TAG-NAME=HZLCAST001</tag>
            </azure>
            <kubernetes enabled="false">
                <namespace>MY-KUBERNETES-NAMESPACE</namespace>
                <service-name>MY-SERVICE-NAME</service-name>
                <service-label-name>MY-SERVICE-LABEL-NAME</service-label-name>
                <service-label-value>MY-SERVICE-LABEL-VALUE</service-label-value>
            </kubernetes>
            <eureka enabled="false">
                <self-registration>true</self-registration>
                <namespace>hazelcast</namespace>
            </eureka>
            <!--            <discovery-strategies>
                            <node-filter class="DummyFilterClass"/>
                            <discovery-strategy class="DummyClass" enabled="true">
                                <properties>
                                    <property name="foo">bar</property>
                                </properties>
                            </discovery-strategy>
                        </discovery-strategies>-->
        </join>
        <interfaces enabled="true">
            <interface>10.10.1.*</interface>
        </interfaces>
        <ssl enabled="true">
            <factory-class-name>com.hazelcast.examples.MySSLContextFactory</factory-class-name>
            <properties>
                <property name="foo">bar</property>
            </properties>
        </ssl>
        <socket-interceptor enabled="true">
            <class-name>com.hazelcast.examples.MySocketInterceptor</class-name>
            <properties>
                <property name="foo">bar</property>
            </properties>
        </socket-interceptor>
        <symmetric-encryption enabled="false">
            <!--
               encryption algorithm such as
               DES/ECB/PKCS5Padding,
               PBEWithMD5AndDES,
               AES/CBC/PKCS5Padding,
               Blowfish,
               DESede
            -->
            <algorithm>PBEWithMD5AndDES</algorithm>
            <!-- salt value to use when generating the secret key -->
            <salt>thesalt</salt>
            <!-- pass phrase to use when generating the secret key -->
            <password>thepass</password>
            <!-- iteration count to use when generating the secret key -->
            <iteration-count>19</iteration-count>
        </symmetric-encryption>
        <member-address-provider enabled="false">
            <class-name>DummyMemberAddressProvider</class-name>
            <properties>
                <property name="foo">bar</property>
            </properties>
        </member-address-provider>
        <failure-detector>
            <icmp enabled="false">
                <timeout-milliseconds>1000</timeout-milliseconds>
                <fail-fast-on-startup>true</fail-fast-on-startup>
                <interval-milliseconds>1000</interval-milliseconds>
                <max-attempts>2</max-attempts>
                <parallel-mode>true</parallel-mode>
                <ttl>255</ttl>
            </icmp>
        </failure-detector>
        <rest-api enabled="true">
            <endpoint-group name="CLUSTER_READ" enabled="true"/>
            <endpoint-group name="CLUSTER_WRITE" enabled="true"/>
            <endpoint-group name="HEALTH_CHECK" enabled="true"/>
            <endpoint-group name="HOT_RESTART" enabled="true"/>
            <endpoint-group name="WAN" enabled="true"/>
            <endpoint-group name="DATA" enabled="true"/>
        </rest-api>
        <memcache-protocol enabled="true"/>
    </network>

</hazelcast>
